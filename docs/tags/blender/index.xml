<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blender on StandingPad&#39;s Corner</title>
    <link>https://standingpadanimations.github.io/tags/blender/</link>
    <description>Recent content in Blender on StandingPad&#39;s Corner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 22 Dec 2022 16:16:09 -0600</lastBuildDate><atom:link href="https://standingpadanimations.github.io/tags/blender/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How I Did It: Hacking Holograms Render</title>
      <link>https://standingpadanimations.github.io/posts/scale-render-process/</link>
      <pubDate>Thu, 22 Dec 2022 16:16:09 -0600</pubDate>
      
      <guid>https://standingpadanimations.github.io/posts/scale-render-process/</guid>
      <description>I recently had the motivation to make the following render
As you can see, there&amp;rsquo;s a lot of reflections, some long test, volumetrics, and other stuff. Since I don&amp;rsquo;t do much Minecraft rendering anymore, I think I&amp;rsquo;ll impart some insight into some of the more technial bits.
GCC&amp;rsquo;s Time to Shine &amp;ldquo;GCC?&amp;rdquo;
Basically, I needed to make a lot of text. Now, I could slam my keyboard a couple of times, but as a nerd I felt like it was the perfect oppertunity to use C++ to generate long text.</description>
    </item>
    
    <item>
      <title>Understanding Cycles Optimization: The Magic Behind Scrambling Pixels like Eggs</title>
      <link>https://standingpadanimations.github.io/posts/automatic-scrambling-distance/</link>
      <pubDate>Wed, 21 Dec 2022 04:30:44 -0600</pubDate>
      
      <guid>https://standingpadanimations.github.io/posts/automatic-scrambling-distance/</guid>
      <description>After I made my post yesterday regarding samples and light bounces, I was asked by a buddy a pretty interesting question.
I try to avoid making certain settings seem &amp;ldquo;magical&amp;rdquo; because with all magic, there&amp;rsquo;s a downside. For GPU rendering (sorry CPU renderers, this setting brings no benifit to y&amp;rsquo;all), one of these settings is known as
Automatic Scrambling Distance
While this setting does help with render times a lot, it also requires a lot of tweaking to make it render with little artifacts.</description>
    </item>
    
    <item>
      <title>Understanding Cycles Optimization: Spewing Samples and Bouncing Around like Crazy</title>
      <link>https://standingpadanimations.github.io/posts/cycles-optimization/</link>
      <pubDate>Tue, 20 Dec 2022 12:17:42 -0600</pubDate>
      
      <guid>https://standingpadanimations.github.io/posts/cycles-optimization/</guid>
      <description>Introduction We know Cycles is a pain in the butt to render. Specifically, the long render times. Of course, there&amp;rsquo;s tons of videos that talk about what settings to use, but those videos don&amp;rsquo;t explain what the settings do. So, exactly what settings do what?
Samples What are samples? In a nutshell, samples are rays, and the sample count represents how many rays are released by Cycles per pixel+ of the camera (yes Cycles starts from the camera as an optimization, all optical systems can be reversed).</description>
    </item>
    
  </channel>
</rss>
