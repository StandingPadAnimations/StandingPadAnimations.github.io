<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blender on StandingPad&#39;s Corner</title>
    <link>https://standingpadanimations.github.io/tags/blender/</link>
    <description>Recent content in Blender on StandingPad&#39;s Corner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 13 Jun 2023 00:01:33 -0500</lastBuildDate><atom:link href="https://standingpadanimations.github.io/tags/blender/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MCprep Development Isn&#39;t Sustainable</title>
      <link>https://standingpadanimations.github.io/posts/mcprep-mi-exodus/</link>
      <pubDate>Tue, 13 Jun 2023 00:01:33 -0500</pubDate>
      
      <guid>https://standingpadanimations.github.io/posts/mcprep-mi-exodus/</guid>
      <description>+Note: MCprep is turning 10 on October 28
In February 2023, the Mine-imator (also known as Mi) developer Nimi announced the end of Mi&amp;rsquo;s development:
With the release of the much awaited 2.0 update, David and I will be leaving development of Mine-imator/Modelbench due to limited availability and wanting to pursue other projects. While active development will be over, patches may still come out if any critical/project-breaking bugs comes up but anything hardware or graphics related likely won&amp;rsquo;t be fixed.</description>
    </item>
    
    <item>
      <title>Prepping Api Cleared! Now What?</title>
      <link>https://standingpadanimations.github.io/posts/prepping-api-cleared-now-what/</link>
      <pubDate>Thu, 18 May 2023 16:52:29 -0500</pubDate>
      
      <guid>https://standingpadanimations.github.io/posts/prepping-api-cleared-now-what/</guid>
      <description>Just yesterday I gave the greenlight for Prepping API, a proposal that would allow users to create their own prep material functions in Python.
But is it worth it?
That proposal was made in 2022, and for about a year now I&amp;rsquo;ve spent time thinking about how such an API could be secured. The problem is obvious: this API would allow arbitrary Python scripts to be loaded.
Sandboxing? Not in Blender where we have only pure Python.</description>
    </item>
    
    <item>
      <title>Problems of MCprep Development</title>
      <link>https://standingpadanimations.github.io/posts/problems-of-mcprep/</link>
      <pubDate>Sat, 11 Mar 2023 16:05:06 -0600</pubDate>
      
      <guid>https://standingpadanimations.github.io/posts/problems-of-mcprep/</guid>
      <description>As the MCprep 3.4.2 release date draws nearer, I think it&amp;rsquo;s important to remind users how MCprep development works, and how important it is that MCprep receives supports from the community. I feel like people have forgotten how much work goes into MCprep, and I think a little reminder wouldn&amp;rsquo;t hurt.
Overview Currently, MCprep only has 2 active maintainers (TheDuckCow and myself). While the MCprep GitHub repo says there&amp;rsquo;s 7, most of them haven&amp;rsquo;t contributed in a while: Now obviously TheDuckCow would have the most commits (411 at the time of writing this) since he&amp;rsquo;s been working on MCprep for almost 10 years now (yes, MCprep has been around for 10 years), with myself being behind with 96 commits.</description>
    </item>
    
    <item>
      <title>MCprep Progress</title>
      <link>https://standingpadanimations.github.io/posts/mcprep-progress/</link>
      <pubDate>Sat, 25 Feb 2023 18:54:11 -0600</pubDate>
      
      <guid>https://standingpadanimations.github.io/posts/mcprep-progress/</guid>
      <description>UPDATE: As of March 11th, 2023, most of these are now confirmed for the 3.4.2 release
As some of you know, I&amp;rsquo;m an MCprep developer, and as part of what I do I work on adding features and fixing bugs in MCprep. Not that, I also help review pull requests and fix bugs.
The latest version of MCprep, MCprep v3.4.1 was released in August of last year. While it may seem like MCprep development is dying, that couldn&amp;rsquo;t be further from the truth.</description>
    </item>
    
    <item>
      <title>How I did It: Calm After the Storm</title>
      <link>https://standingpadanimations.github.io/posts/calm-after-storm-render/</link>
      <pubDate>Wed, 01 Feb 2023 18:19:14 -0600</pubDate>
      
      <guid>https://standingpadanimations.github.io/posts/calm-after-storm-render/</guid>
      <description>Yes guys, I&amp;rsquo;m back.
Anyways, I recently had an idea and made this render: Not my best, but lets talk about how I made it.
Trees of Light For this, I used Bforartists 3.4, which is based off of Blender 3.5. Immediately I noticed a slowdown in viewport responsiveness. Thinking it was a driver, I went from Nvidia&amp;rsquo;s Studio drivers to their Game Ready drivers, but no difference.
Sidenote: Nvidia has 2 drivers, Studio and Game Ready.</description>
    </item>
    
    <item>
      <title>Hot Take: We&#39;re Teaching People to Treat Help Channels like Google</title>
      <link>https://standingpadanimations.github.io/posts/issues-with-helping-too-much/</link>
      <pubDate>Tue, 03 Jan 2023 18:58:15 -0600</pubDate>
      
      <guid>https://standingpadanimations.github.io/posts/issues-with-helping-too-much/</guid>
      <description>Anyone who&amp;rsquo;s spent a good amount of time in a help channel on a Minecraft animation server can related to this; you go on help and support, and see the following:
One person asking how to import Optifine shaders That guy using 2.79 who gets offended when you politely suggest updating to a new version The person who wants to import animation from a youtube video (I swear I&amp;rsquo;m not making this up) 50 people asking why material mode is so slow 10 more people asking how to show textures 1 or 2 people asking how to move bones (seriously guys?</description>
    </item>
    
    <item>
      <title>How I Did It: 2023 New Year&#39;s Render</title>
      <link>https://standingpadanimations.github.io/posts/new-years-2023/</link>
      <pubDate>Sat, 31 Dec 2022 00:00:00 -0600</pubDate>
      
      <guid>https://standingpadanimations.github.io/posts/new-years-2023/</guid>
      <description>It&amp;rsquo;s now New Year&amp;rsquo;s Eve, so I made a new years render: This is perhaps the most complicated render I have done to date. I started just before Christmas and finished in about 3 to 4 days.
Hologram Shenanigans One of the things I wanted to do was 3D holograms, because I&amp;rsquo;ve never done that before. I first followed a Blender Guru tutorial, and the final node setup does essentially the following:</description>
    </item>
    
    <item>
      <title>How I Did It: Hacking Holograms Render</title>
      <link>https://standingpadanimations.github.io/posts/scale-render-process/</link>
      <pubDate>Thu, 22 Dec 2022 16:16:09 -0600</pubDate>
      
      <guid>https://standingpadanimations.github.io/posts/scale-render-process/</guid>
      <description>I recently had the motivation to make the following render
As you can see, there&amp;rsquo;s a lot of reflections, some long test, volumetrics, and other stuff. Since I don&amp;rsquo;t do much Minecraft rendering anymore, I think I&amp;rsquo;ll impart some insight into some of the more technial bits.
GCC&amp;rsquo;s Time to Shine &amp;ldquo;GCC?&amp;rdquo;
Basically, I needed to make a lot of text. Now, I could slam my keyboard a couple of times, but as a nerd I felt like it was the perfect oppertunity to use C++ to generate long text.</description>
    </item>
    
    <item>
      <title>Understanding Cycles Optimization: The Magic Behind Scrambling Pixels like Eggs</title>
      <link>https://standingpadanimations.github.io/posts/automatic-scrambling-distance/</link>
      <pubDate>Wed, 21 Dec 2022 04:30:44 -0600</pubDate>
      
      <guid>https://standingpadanimations.github.io/posts/automatic-scrambling-distance/</guid>
      <description>After I made my post yesterday regarding samples and light bounces, I was asked by a buddy a pretty interesting question.
I try to avoid making certain settings seem &amp;ldquo;magical&amp;rdquo; because with all magic, there&amp;rsquo;s a downside. For GPU rendering (sorry CPU renderers, this setting brings no benifit to y&amp;rsquo;all), one of these settings is known as
Automatic Scrambling Distance
While this setting does help with render times a lot, it also requires a lot of tweaking to make it render with little artifacts.</description>
    </item>
    
    <item>
      <title>Understanding Cycles Optimization: Spewing Samples and Bouncing Around like Crazy</title>
      <link>https://standingpadanimations.github.io/posts/cycles-optimization/</link>
      <pubDate>Tue, 20 Dec 2022 12:17:42 -0600</pubDate>
      
      <guid>https://standingpadanimations.github.io/posts/cycles-optimization/</guid>
      <description>Introduction We know Cycles is a pain in the butt to render. Specifically, the long render times. Of course, there&amp;rsquo;s tons of videos that talk about what settings to use, but those videos don&amp;rsquo;t explain what the settings do. So, exactly what settings do what?
Samples What are samples? In a nutshell, samples are rays, and the sample count represents how many rays are released by Cycles per pixel+ of the camera (yes Cycles starts from the camera as an optimization, all optical systems can be reversed).</description>
    </item>
    
  </channel>
</rss>
