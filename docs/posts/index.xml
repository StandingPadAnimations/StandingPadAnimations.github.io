<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on StandingPad&#39;s Corner</title>
        <link>https://standingpadanimations.github.io/posts/</link>
        <description>Recent content in Posts on StandingPad&#39;s Corner</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Sat, 31 Dec 2022 00:00:00 -0600</lastBuildDate>
        <atom:link href="https://standingpadanimations.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>How I Did It: 2023 New Year&#39;s Render</title>
            <link>https://standingpadanimations.github.io/posts/new-years-2023/</link>
            <pubDate>Sat, 31 Dec 2022 00:00:00 -0600</pubDate>
            
            <guid>https://standingpadanimations.github.io/posts/new-years-2023/</guid>
            <description>It&amp;rsquo;s now New Year&amp;rsquo;s Eve, so I made a new years render: This is perhaps the most complicated render I have done to date. I started just before Christmas and finished in about 3 to 4 days.
Hologram Shenanigans One of the things I wanted to do was 3D holograms, because I&amp;rsquo;ve never done that before. I first followed a Blender Guru tutorial, and the final node setup does essentially the following:</description>
            <content type="html"><![CDATA[<p>It&rsquo;s now New Year&rsquo;s Eve, so I made a new years render:

    <img src="/imgs/new-years/NewYearsWatermarked.png"  alt="New Years render, I&#39;m bad at describing sadly"  class="center"  style="border-radius: 8px;"  />

</p>
<p>This is perhaps the most complicated render I have done to date. I started just before Christmas and finished in about 3 to 4 days.</p>
<h1 id="hologram-shenanigans">Hologram Shenanigans</h1>
<p>One of the things I wanted to do was 3D holograms, because I&rsquo;ve never done that before. I first followed a Blender Guru tutorial, and the final node setup does essentially the following:</p>
<ul>
<li>Create a grid</li>
<li>Duplicate and stack a bunch of those grids</li>
<li>Get rid of any point on those grids that doesn&rsquo;t touch the model (in this case Ferris the Rust mascot)</li>
<li>Add some icospheres to those points</li>
<li>Create a bunch of curve objects from those points</li>
<li>Merge them at the bottom vertex (represented by a sphere)</li>
</ul>
<p>&ldquo;If it works, all is good, right?&rdquo;</p>
<p><em>blank stare</em></p>
<p>&ldquo;Right?&rdquo;</p>
<p>Well it works, but one slight issue,</p>
<p><strong>Cycles does not like dealing with thousands of curve objects</strong></p>
<p>Rendering a 3D hologram (even on its own) using Blender Guru&rsquo;s method was an absolute pain, and I was prepared to just suck it and deal with it. However, after I mentioned how much of a pain it would be to render on the Erindale server, Slinkcreated a far more optimized version of the hologram.</p>

    <img src="/imgs/new-years/slink-solution.png"  alt="Slink comes to the rescue"  class="center"  style="border-radius: 8px;"  />


<p>Essentially, instead of making thousands of curve objects, he made a setup that takes the model, extrudes it downwards, and then merges the verticies into a single point. The result is the same, but with far less render time.</p>
<p>And that&rsquo;s not all. He also changed how the &ldquo;pixels&rdquo; were created, by creating a cube and scattering points in the volume of that cube, instead of using a stack of grids. This meant that using text as a model was actually fesible, hence the &ldquo;It&rsquo;s 2023&rdquo; hologram.</p>
<p>Now I tried to see if there was a silver lining with Blender Guru&rsquo;s method. Maybe it was somehow more simpler to explain and expand upon, or maybe it could handle certain edge cases. As far as I can tell however, it&rsquo;s simply not that good. Sure if you&rsquo;re learning geometry nodes or want some practice, it&rsquo;s fine, but in terms of actually using it (especially in Cycles), it&rsquo;s pretty horrific to say the least.</p>
<h1 id="lets-not-burn-peoples-eyes-please">Let&rsquo;s Not Burn People&rsquo;s Eyes Please</h1>
<p>Near the end, I found a short that explained how auto exposure works, and I remembered an addon that allowed for auto exposure.</p>
<p>Cool except one issue: it just wouldn&rsquo;t work with AgX</p>
<p>&ldquo;Why not just use Filmic then?&rdquo;</p>
<p>Well&hellip;</p>

    <img src="/imgs/new-years/filmic-sucks.png"  alt="Ungodly color skewing"  class="center"  style="border-radius: 8px;"  />


<p>As you can see, Filmic just looks bad compared to AgX, so that would be a no-no.</p>
<p>I looked into the addon code and found that each look was accosiated to some exposure values (where the develeoper got those values, idk), which added some complexity. In addition, even with my code changes, the addon still refused to work with AgX.</p>
<p>So I scoured the depths of Google and found <a href="https://pedroplopes.itch.io/autoexposure">this auto exposure node</a>, which seemed to work, although with some drawbacks.</p>
<p>Honestly having it as an addon would have been preferable, but sometimes you got to work with what you got.</p>
<h1 id="focus-issues-lets-add-some-effects">Focus Issues? Let&rsquo;s Add Some Effects!</h1>
<p>Even while making the scene I felt there were some &ldquo;focus&rdquo; issues. In other words, I felt like the scene was too chaotic to direct the viewer&rsquo;s eye.</p>
<p>The last time I had this much detail was back in the October 2020 MCprep contest, but back then there wasn&rsquo;t a focus. This time, there was a focus, so I had to figure out a way to maintain that focus.</p>

    <img src="/imgs/new-years/focus-issues.png"  alt="Seriously, the people on the Erindale server are smart"  class="center"  style="border-radius: 8px;"  />


<p>Oh</p>
<p>So anyway I added a vignette effect. It&rsquo;s not really noticable, but I think it does a good job at keeping focus.</p>
<h1 id="optimization">Optimization</h1>
<p>Like previously, I disabled clamping as it creates more issues then it solves, and I removed all mesh lights from the scene. What makes this scene different was the crazy amount of geometry I had to deal with</p>
<p>We already talked about the holograms (before Slink did his magic), but there was also a lot of fireworks (which are all particles), so I simply used a decimate modifier on the bits to reduce as much geometry as possible.</p>
<p>Other then that, not much else is different from my previous scene.</p>
<h1 id="small-tangent-on-the-background-city">Small Tangent on the Background City</h1>
<p>When I originally rendered this, there wasn&rsquo;t much of a background. However, the day before, I realized that I could duplicate the OBJ and render with that as the background.</p>
<p>Let&rsquo;s just say that was a nightmare. I had to go from Bforartists back to stock Blender due to a weird issue I had while rerendering. I think the result was worth it though, and honestly those couple of hours of debugging were worth it.</p>
<h1 id="acknowledgments-for-this-year">Acknowledgments for this year</h1>
<p>I would first like to thank the people who made the scifi map I used to render this and many other renders. <a href="https://twitter.com/ElysiumFire"><strong>ElysiumFire</strong></a> (the people who made the map I used for this and many other renders) are extremely talented when it comes to map making. You may know them for Neon District, the map used to showcase Minecraft with RTX. The fact they also made the map free to download is something I&rsquo;ll always be grateful for.</p>
<p>I have linked their map before on Twitter, but no one reads that so I feel obligated to link it here. The map can be found <a href="https://www.planetminecraft.com/project/cyberpunk-project-timelapse/"><strong>here</strong></a>.</p>
<p>I would also like to thank the people on the <a href="https://discord.gg/erindale-xyz-314131871376080906"><strong>Erindale.xyz server</strong></a>, they&rsquo;re extremely friendly and talented (as I&rsquo;ve shown in a couple of my other posts), and the community is welcoming even to Minecraft rendering. Words can not describe how grateful I am.</p>
<p>Happy new year everyone!</p>
]]></content>
        </item>
        
        <item>
            <title>Meet Jason the Cat</title>
            <link>https://standingpadanimations.github.io/posts/meet-jason-the-cat/</link>
            <pubDate>Mon, 26 Dec 2022 21:37:01 -0600</pubDate>
            
            <guid>https://standingpadanimations.github.io/posts/meet-jason-the-cat/</guid>
            <description>Hey guys, just a small IRL update, my family got a cat today! His name is Jason and he&amp;rsquo;s 8 months old. Here&amp;rsquo;s some photos:</description>
            <content type="html"><![CDATA[<p>Hey guys, just a small IRL update, my family got a cat today! His name is Jason and he&rsquo;s 8 months old. Here&rsquo;s some photos:</p>

    <img src="/imgs/jason-the-cat/cat-1.png"  alt="Cute cat looking at the camera"  class="center"  style="border-radius: 8px;"  />



    <img src="/imgs/jason-the-cat/cat-2.png"  alt="I guess the cat owns our shoes now"  class="center"  style="border-radius: 8px;"  />


]]></content>
        </item>
        
        <item>
            <title>Happy Holidays</title>
            <link>https://standingpadanimations.github.io/posts/happy-holidays/</link>
            <pubDate>Sun, 25 Dec 2022 13:30:22 -0600</pubDate>
            
            <guid>https://standingpadanimations.github.io/posts/happy-holidays/</guid>
            <description>Happy holidays everyone! Sorry I couldn&amp;rsquo;t post yesterday (it was my dad&amp;rsquo;s birthday and birthdays + Christmas Eve don&amp;rsquo;t really mix well).
Of course, I myself don&amp;rsquo;t celebrate Christmas (cultural reasons) so I&amp;rsquo;m just waiting for New Years. I&amp;rsquo;ve been working on a New Years render, so here&amp;rsquo;s a WIP
It&amp;rsquo;s also the second week of winter break for me, which means in about a week I&amp;rsquo;ll have to return back to doing IRL stuff.</description>
            <content type="html"><![CDATA[<p>Happy holidays everyone! Sorry I couldn&rsquo;t post yesterday (it was my dad&rsquo;s birthday and birthdays + Christmas Eve don&rsquo;t really mix well).</p>
<p>Of course, I myself don&rsquo;t celebrate Christmas (cultural reasons) so I&rsquo;m just waiting for New Years. I&rsquo;ve been working on a New Years render, so here&rsquo;s a WIP</p>

    <img src="/imgs/happy-holidays/wip-1.png"  alt="WIP of a new years render I&#39;ve been working on"  class="center"  style="border-radius: 8px;"  />


<p>It&rsquo;s also the second week of winter break for me, which means in about a week I&rsquo;ll have to return back to doing IRL stuff. Not sure how I&rsquo;ll continue writing, but I&rsquo;ll figure it out eventually.</p>
<p>Speaking of IRL stuff, my Rust crate <a href="https://github.com/Resurgence-VM-Development/Resurgence">Resurgence</a> (a virtual machine backend that can easily be embeded in a Rust project) is almost ready for its first alpha. I don&rsquo;t think I&rsquo;ve ever talked about it on my old website (let alone here), not sure why as it&rsquo;s a big part of what I do normally.</p>
<p>I think for the rest of this week I&rsquo;ll be working on MCprep/Resurgence and some IRL work I have remaining.</p>
<p>That&rsquo;s pretty much all I have to write about today, cya!</p>
]]></content>
        </item>
        
        <item>
            <title>How I Did It: Hacking Holograms Render</title>
            <link>https://standingpadanimations.github.io/posts/scale-render-process/</link>
            <pubDate>Thu, 22 Dec 2022 16:16:09 -0600</pubDate>
            
            <guid>https://standingpadanimations.github.io/posts/scale-render-process/</guid>
            <description>I recently had the motivation to make the following render
As you can see, there&amp;rsquo;s a lot of reflections, some long test, volumetrics, and other stuff. Since I don&amp;rsquo;t do much Minecraft rendering anymore, I think I&amp;rsquo;ll impart some insight into some of the more technial bits.
GCC&amp;rsquo;s Time to Shine &amp;ldquo;GCC?&amp;rdquo;
Basically, I needed to make a lot of text. Now, I could slam my keyboard a couple of times, but as a nerd I felt like it was the perfect oppertunity to use C++ to generate long text.</description>
            <content type="html"><![CDATA[<p>I recently had the motivation to make the following render</p>

    <img src="/imgs/scale-render/final-render.png"  alt="Cool render I made, can&#39;t really put it in words"  class="center"  style="border-radius: 8px;"  />


<p>As you can see, there&rsquo;s a lot of reflections, some long test, volumetrics, and other stuff. Since I don&rsquo;t do much Minecraft rendering anymore, I think I&rsquo;ll impart some insight into some of the more technial bits.</p>
<h1 id="gccs-time-to-shine">GCC&rsquo;s Time to Shine</h1>
<p>&ldquo;GCC?&rdquo;</p>
<p>Basically, I needed to make a <strong>lot</strong> of text. Now, I could slam my keyboard a couple of times, but as a nerd I felt like it was the perfect oppertunity to use C++ to generate long text.</p>
<p>See, in the <code>*NIX</code> world (so MacOS and Linux), we have a compiler called GCC. GCC is infamous for generating horrific errors (I remember times where it would never stop printing). Since these errors are logged in the terminal (which made masking easy) and they were very technical, I decided to take advantage of those errors to make long text.</p>
<p>I yoinked the following code from <a href="https://stackoverflow.com/questions/49653235/shortening-gcc-error-messages">StackOverFlow</a>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;string&gt;</span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;iostream&gt;</span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">struct</span> <span style="color:#a6e22e">Z</span>{};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">void</span> <span style="color:#a6e22e">foo</span>() {
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    std<span style="color:#f92672">::</span>string s;
</span></span><span style="display:flex;"><span>    Z z;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s 
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>}
</span></span></code></pre></div><p>and I put it through GCC, which printed the following error:</p>
<details>
  <summary>Long Error, Click to View</summary>
  <div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp: In function <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">void</span> foo()<span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">15</span><span style="color:#f92672">:</span> error: no match <span style="color:#66d9ef">for</span> <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span><span style="color:#960050;background-color:#1e0010">&#39;</span> (operand types are <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>ostream<span style="color:#960050;background-color:#1e0010">&#39;</span> {aka <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span><span style="color:#960050;background-color:#1e0010">&#39;</span>} and <span style="color:#e6db74">&#39;Z&#39;</span>)
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>     <span style="color:#f92672">~~~~~~~~~~^~~~</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">108</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> (<span style="color:#f92672">*</span>)(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span>)) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(__ostream_type<span style="color:#f92672">&amp;</span> (<span style="color:#f92672">*</span>__pf)(__ostream_type<span style="color:#f92672">&amp;</span>))
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">108</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> (<span style="color:#f92672">*</span>)(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span> {aka <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;&amp;</span> (<span style="color:#f92672">*</span>)(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;&amp;</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>}
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">117</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ios_type<span style="color:#f92672">&amp;</span> (<span style="color:#f92672">*</span>)(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ios_type<span style="color:#f92672">&amp;</span>)) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ios_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ios<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(__ios_type<span style="color:#f92672">&amp;</span> (<span style="color:#f92672">*</span>__pf)(__ios_type<span style="color:#f92672">&amp;</span>))
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">117</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;::</span>__ios_type<span style="color:#f92672">&amp;</span> (<span style="color:#f92672">*</span>)(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;::</span>__ios_type<span style="color:#f92672">&amp;</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span> {aka <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ios<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;&amp;</span> (<span style="color:#f92672">*</span>)(std<span style="color:#f92672">::</span>basic_ios<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;&amp;</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>}
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">127</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>ios_base<span style="color:#f92672">&amp;</span> (<span style="color:#f92672">*</span>)(std<span style="color:#f92672">::</span>ios_base<span style="color:#f92672">&amp;</span>)) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(ios_base<span style="color:#f92672">&amp;</span> (<span style="color:#f92672">*</span>__pf) (ios_base<span style="color:#f92672">&amp;</span>))
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">127</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>ios_base<span style="color:#f92672">&amp;</span> (<span style="color:#f92672">*</span>)(std<span style="color:#f92672">::</span>ios_base<span style="color:#f92672">&amp;</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">166</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">long</span> <span style="color:#66d9ef">int</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">long</span> __n)
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">166</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">long</span> <span style="color:#66d9ef">int</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">170</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">long</span> <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">int</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">long</span> __n)
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">170</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">long</span> <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">int</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">174</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">bool</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">bool</span> __n)
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">174</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">bool</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">693</span>,
</span></span><span style="display:flex;"><span>                 from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>bits<span style="color:#f92672">/</span>ostream.tcc:<span style="color:#ae81ff">91</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">short</span> <span style="color:#66d9ef">int</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>bits<span style="color:#f92672">/</span>ostream.tcc:<span style="color:#ae81ff">91</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">short</span> <span style="color:#66d9ef">int</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">181</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">short</span> <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">int</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">short</span> __n)
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">181</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">short</span> <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">int</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">693</span>,
</span></span><span style="display:flex;"><span>                 from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>bits<span style="color:#f92672">/</span>ostream.tcc:<span style="color:#ae81ff">105</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">int</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>bits<span style="color:#f92672">/</span>ostream.tcc:<span style="color:#ae81ff">105</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">int</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">192</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">int</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">int</span> __n)
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">192</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">int</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">201</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">long</span> <span style="color:#66d9ef">long</span> <span style="color:#66d9ef">int</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">long</span> <span style="color:#66d9ef">long</span> __n)
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">201</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">long</span> <span style="color:#66d9ef">long</span> <span style="color:#66d9ef">int</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">205</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">long</span> <span style="color:#66d9ef">long</span> <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">int</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">long</span> <span style="color:#66d9ef">long</span> __n)
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">205</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">long</span> <span style="color:#66d9ef">long</span> <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">int</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">220</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">double</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">double</span> __f)
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">220</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">double</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">224</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">float</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">float</span> __f)
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">224</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">float</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">232</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">long</span> <span style="color:#66d9ef">double</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">long</span> <span style="color:#66d9ef">double</span> __f)
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">232</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">long</span> <span style="color:#66d9ef">double</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">245</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">const</span> <span style="color:#66d9ef">void</span><span style="color:#f92672">*</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">const</span> <span style="color:#66d9ef">void</span><span style="color:#f92672">*</span> __p)
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">245</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">const</span> <span style="color:#66d9ef">void</span><span style="color:#f92672">*</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">693</span>,
</span></span><span style="display:flex;"><span>                 from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>bits<span style="color:#f92672">/</span>ostream.tcc:<span style="color:#ae81ff">119</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__streambuf_type<span style="color:#f92672">*</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__streambuf_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_streambuf<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>bits<span style="color:#f92672">/</span>ostream.tcc:<span style="color:#ae81ff">119</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;::</span>__streambuf_type<span style="color:#f92672">*</span><span style="color:#960050;background-color:#1e0010">&#39;</span> {aka <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_streambuf<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;*</span><span style="color:#960050;background-color:#1e0010">&#39;</span>}
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>string:<span style="color:#ae81ff">52</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">1</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>bits<span style="color:#f92672">/</span>basic_string.h:<span style="color:#ae81ff">6284</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_CharT</span>, <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span>, <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Alloc</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span>, <span style="color:#66d9ef">const</span> std<span style="color:#f92672">::</span>__cxx11<span style="color:#f92672">::</span>basic_string<span style="color:#f92672">&lt;</span>_CharT, _Traits, _Alloc<span style="color:#f92672">&gt;&amp;</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> __os,
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>bits<span style="color:#f92672">/</span>basic_string.h:<span style="color:#ae81ff">6284</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   <span style="color:#e6db74">&#39;Z&#39;</span> is not derived from <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">const</span> std<span style="color:#f92672">::</span>__cxx11<span style="color:#f92672">::</span>basic_string<span style="color:#f92672">&lt;</span>_CharT, _Traits, _Alloc<span style="color:#f92672">&gt;</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>bits<span style="color:#f92672">/</span>ios_base.h:<span style="color:#ae81ff">46</span>,
</span></span><span style="display:flex;"><span>                 from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ios:<span style="color:#ae81ff">42</span>,
</span></span><span style="display:flex;"><span>                 from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">38</span>,
</span></span><span style="display:flex;"><span>                 from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>system_error:<span style="color:#ae81ff">217</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_CharT</span>, <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span>, <span style="color:#66d9ef">const</span> std<span style="color:#f92672">::</span>error_code<span style="color:#f92672">&amp;</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> __os, <span style="color:#66d9ef">const</span> error_code<span style="color:#f92672">&amp;</span> __e)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>system_error:<span style="color:#ae81ff">217</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   cannot convert <span style="color:#e6db74">&#39;z&#39;</span> (type <span style="color:#e6db74">&#39;Z&#39;</span>) to type <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">const</span> std<span style="color:#f92672">::</span>error_code<span style="color:#f92672">&amp;</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">497</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_CharT</span>, <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span>, _CharT)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> __out, _CharT __c)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">497</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   deduced conflicting types <span style="color:#66d9ef">for</span> parameter <span style="color:#960050;background-color:#1e0010">&#39;</span>_CharT<span style="color:#960050;background-color:#1e0010">&#39;</span> (<span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">char</span><span style="color:#960050;background-color:#1e0010">&#39;</span> and <span style="color:#e6db74">&#39;Z&#39;</span>)
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">502</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_CharT</span>, <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span>, <span style="color:#66d9ef">char</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> __out, <span style="color:#66d9ef">char</span> __c)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">502</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   cannot convert <span style="color:#e6db74">&#39;z&#39;</span> (type <span style="color:#e6db74">&#39;Z&#39;</span>) to type <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">char</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">508</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span>, <span style="color:#66d9ef">char</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> __out, <span style="color:#66d9ef">char</span> __c)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">508</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   cannot convert <span style="color:#e6db74">&#39;z&#39;</span> (type <span style="color:#e6db74">&#39;Z&#39;</span>) to type <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">char</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">514</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span>, <span style="color:#66d9ef">signed</span> <span style="color:#66d9ef">char</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> __out, <span style="color:#66d9ef">signed</span> <span style="color:#66d9ef">char</span> __c)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">514</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   cannot convert <span style="color:#e6db74">&#39;z&#39;</span> (type <span style="color:#e6db74">&#39;Z&#39;</span>) to type <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">signed</span> <span style="color:#66d9ef">char</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">519</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span>, <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">char</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> __out, <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">char</span> __c)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">519</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   cannot convert <span style="color:#e6db74">&#39;z&#39;</span> (type <span style="color:#e6db74">&#39;Z&#39;</span>) to type <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">char</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">539</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_CharT</span>, <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span>, <span style="color:#66d9ef">const</span> _CharT<span style="color:#f92672">*</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> __out, <span style="color:#66d9ef">const</span> _CharT<span style="color:#f92672">*</span> __s)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">539</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   mismatched types <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">const</span> _CharT<span style="color:#f92672">*</span><span style="color:#960050;background-color:#1e0010">&#39;</span> and <span style="color:#e6db74">&#39;Z&#39;</span>
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">693</span>,
</span></span><span style="display:flex;"><span>                 from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>bits<span style="color:#f92672">/</span>ostream.tcc:<span style="color:#ae81ff">321</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_CharT</span>, <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span>, <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> __out, <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> __s)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>bits<span style="color:#f92672">/</span>ostream.tcc:<span style="color:#ae81ff">321</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   cannot convert <span style="color:#e6db74">&#39;z&#39;</span> (type <span style="color:#e6db74">&#39;Z&#39;</span>) to type <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">556</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span>, <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> __out, <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> __s)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">556</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   cannot convert <span style="color:#e6db74">&#39;z&#39;</span> (type <span style="color:#e6db74">&#39;Z&#39;</span>) to type <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">569</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span>, <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">signed</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> __out, <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">signed</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> __s)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">569</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   cannot convert <span style="color:#e6db74">&#39;z&#39;</span> (type <span style="color:#e6db74">&#39;Z&#39;</span>) to type <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">const</span> <span style="color:#66d9ef">signed</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">574</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span>, <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> __out, <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> __s)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">574</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   cannot convert <span style="color:#e6db74">&#39;z&#39;</span> (type <span style="color:#e6db74">&#39;Z&#39;</span>) to type <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">const</span> <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">682</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Ostream</span>, <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Tp</span><span style="color:#f92672">&gt;</span> <span style="color:#66d9ef">typename</span> std<span style="color:#f92672">::</span>enable_if<span style="color:#f92672">&lt;</span>std<span style="color:#f92672">::</span>__and_<span style="color:#f92672">&lt;</span>std<span style="color:#f92672">::</span>__not_<span style="color:#f92672">&lt;</span>std<span style="color:#f92672">::</span>is_lvalue_reference<span style="color:#f92672">&lt;</span>_Tp<span style="color:#f92672">&gt;</span> <span style="color:#f92672">&gt;</span>, std<span style="color:#f92672">::</span>__is_convertible_to_basic_ostream<span style="color:#f92672">&lt;</span>_Ostream<span style="color:#f92672">&gt;</span>, std<span style="color:#f92672">::</span>__is_insertable<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">typename</span> std<span style="color:#f92672">::</span>__is_convertible_to_basic_ostream<span style="color:#f92672">&lt;</span>_Tp<span style="color:#f92672">&gt;::</span>__ostream_type, <span style="color:#66d9ef">const</span> _Tp<span style="color:#f92672">&amp;</span>, <span style="color:#66d9ef">void</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">&gt;::</span>value, <span style="color:#66d9ef">typename</span> std<span style="color:#f92672">::</span>__is_convertible_to_basic_ostream<span style="color:#f92672">&lt;</span>_Tp<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&gt;::</span>type std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(_Ostream<span style="color:#f92672">&amp;&amp;</span>, <span style="color:#66d9ef">const</span> _Tp<span style="color:#f92672">&amp;</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(_Ostream<span style="color:#f92672">&amp;&amp;</span> __os, <span style="color:#66d9ef">const</span> _Tp<span style="color:#f92672">&amp;</span> __x)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">682</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream: In substitution of <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Ostream</span>, <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Tp</span><span style="color:#f92672">&gt;</span> <span style="color:#66d9ef">typename</span> std<span style="color:#f92672">::</span>enable_if<span style="color:#f92672">&lt;</span>std<span style="color:#f92672">::</span>__and_<span style="color:#f92672">&lt;</span>std<span style="color:#f92672">::</span>__not_<span style="color:#f92672">&lt;</span>std<span style="color:#f92672">::</span>is_lvalue_reference<span style="color:#f92672">&lt;</span>_Tp<span style="color:#f92672">&gt;</span> <span style="color:#f92672">&gt;</span>, std<span style="color:#f92672">::</span>__is_convertible_to_basic_ostream<span style="color:#f92672">&lt;</span>_Ostream<span style="color:#f92672">&gt;</span>, std<span style="color:#f92672">::</span>__is_insertable<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">typename</span> std<span style="color:#f92672">::</span>__is_convertible_to_basic_ostream<span style="color:#f92672">&lt;</span>_Tp<span style="color:#f92672">&gt;::</span>__ostream_type, <span style="color:#66d9ef">const</span> _Tp<span style="color:#f92672">&amp;</span>, <span style="color:#66d9ef">void</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">&gt;::</span>value, <span style="color:#66d9ef">typename</span> std<span style="color:#f92672">::</span>__is_convertible_to_basic_ostream<span style="color:#f92672">&lt;</span>_Tp<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&gt;::</span>type std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(_Ostream<span style="color:#f92672">&amp;&amp;</span>, <span style="color:#66d9ef">const</span> _Tp<span style="color:#f92672">&amp;</span>) [with _Ostream <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;&amp;</span>; _Tp <span style="color:#f92672">=</span> Z]<span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span>   required from here
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">682</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> error: no type named <span style="color:#960050;background-color:#1e0010">&#39;</span>type<span style="color:#960050;background-color:#1e0010">&#39;</span> in <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">struct</span> <span style="color:#a6e22e">std</span><span style="color:#f92672">::</span>enable_if<span style="color:#f92672">&lt;</span>false, std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;&amp;&gt;</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span></code></pre></div>
</details>

<p>I then made a mask using a screenshot of it:

    <img src="/imgs/scale-render/error.png"  alt="Error message from earlier, just as a screenshot"  class="center"  style="border-radius: 8px;"  />

</p>
<p>And use that as part of the hologram in the render.</p>
<h1 id="optimizing">Optimizing</h1>
<p>There&rsquo;s a lot I have to say about optimizing. First off, here&rsquo;s a screenshots of the viewport with the volumetrics:

    <img src="/imgs/scale-render/viewport-1.png"  alt="Cool viewport screenshot"  class="center"  style="border-radius: 8px;"  />

</p>
<p>&ldquo;But wait, where&rsquo;s the cool godrays in the final render?&rdquo;</p>
<p>I added those in compositing. In general I think it&rsquo;s easier to use the sunbeams node for godrays.</p>
<p>But oh boy did volumetrics become a pain in the but to work with. I enabled homogenous in both world and material settings to make rendering faster.

    <img src="/imgs/scale-render/homogenous-1.png"  alt="Homogenous in the world settings"  class="center"  style="border-radius: 8px;"  />

</p>

    <img src="/imgs/scale-render/homogenous-2.png"  alt="Homogenous in the material settings"  class="center"  style="border-radius: 8px;"  />


<p>Those helped with render times a little, but there was still the issue with fireflies.</p>
<h2 id="magic-has-costs-even-clamping">Magic has Costs, even Clamping</h2>
<blockquote>
<p>You will observe with concern how long a useful truth may be known and exist, before it is generally received and practiced on.</p>
<p>Benjamin Franklin; July 31st, 1786</p>
</blockquote>
<p>In the Minecraft animation world, we&rsquo;re taught to use a clamping value of 1, not fully understanding what clamping does.</p>
<p>Clamping limits how bright a pixel can be. While it does reduce fireflies, it also reduces desirable highlights to nothing, and can make reflections look mundane. In one of my previous renders, clamping caused reflections to appear darker, an issue which I almost assumed to be a Cycles bug.</p>
<p>HJ Hornbeck in his blog post <a href="https://sinmantyx.wordpress.com/2015/03/18/perfect-clamp-1/">&ldquo;The Perfect Clamp&rdquo;</a> explains how to achive a good clamp value that gives good highlights with little fireflies, but the process isn&rsquo;t as strightforward as you might think. It requires a whole lot of rendering test renders, measuring RGB values, and refinement to get a good result. In the end, I decided to avoid clamping completely, and use a value of 0 (which diables it).</p>
<p>As the developer behind the MCprep Cycles Optimizer, it may worth it to remove clamping entirely from the optimizer, for it can be extremely destructive when not taking into account the scene itself. Like all settings, clamping should be treated as a scene-dependent thing, not something to just throw the same value at.</p>
<p>Most fireflies in Minecraft scenes are caused by mesh lights anyway, and after making the hologram emit no light and using a lamp to emulate the light from it, most of the fireflies were nowhere to be found.</p>
<p>As far as I can tell, clamping seems to be used as a convinient solution way to solve fireflies caused by mesh lights. If only we had a way of automatically generating lamps for emissive blocks, then we wouldn&rsquo;t have this issue anyway (I have been working on a feature to remove mesh lighting from MCprep materials, so that&rsquo;s a start).</p>
<p>Tldr: Clamping is a terrible solution to fix fireflies caused by mesh lights. We&rsquo;re better off removing mesh lights entirely and using lamps. Clamping should be treated the same as <a href="https://standingpadanimations.github.io/posts/automatic-scrambling-distance/#all-magic-has-a-cost">Scrambling Distance</a>, an option that requires careful consideration and refinement.</p>
<p>Here&rsquo;s the settings I used for this particular render (specifically light paths and color management):

    <img src="/imgs/scale-render/general-settings.png"  alt="General settings"  class="center"  style="border-radius: 8px;"  />

</p>
<p>These settings are for just this scene (and I use a GTX 1660 Super), so don&rsquo;t copy it hoping it will help with render times. Optimization is scene dependent, not uniform.</p>
<h2 id="sidenote-color">Sidenote: Color</h2>
<p>One might notice the lack of Filmic in exchange for AgX. I&rsquo;ve written about AgX on my old website but the tldr is that AgX is a better version of Filmic with more color nuance. Once you use it, you can&rsquo;t go back to Filmic.</p>
<h1 id="compositing">Compositing</h1>
<p>I do 2 rounds of compositing. The first round is denoising with <a href="https://pidgeontools.gumroad.com/l/SuperImageDenoiser">SID</a>, and the second round is where all the magic happens.</p>
<p>Before:

    <img src="/imgs/scale-render/before-comp.png"  alt="Before compositing"  class="center"  style="border-radius: 8px;"  />

</p>
<p>After:

    <img src="/imgs/scale-render/after-comp.png"  alt="After compositing"  class="center"  style="border-radius: 8px;"  />

</p>
<p>This is also where I added all those fancy godray effects. I used the denoising depth pass to seperate the world and structures, and plugged it into the sun beams node (btw, Blender devs, if you&rsquo;re reading this, please optimize it or let it take advantage of the GPU, it is horrifically annoying to edit), did some color magic, and added back in. The result is a godly looking background.</p>
<h1 id="tldr">Tldr</h1>
<p>Basically, a lot of work in optimizing, discovering how bad clamping is, compositing magic, all to make a nice looking render.</p>
<p>Ight, that&rsquo;s it, cya.</p>
]]></content>
        </item>
        
        <item>
            <title>Understanding Cycles Optimization: The Magic Behind Scrambling Pixels like Eggs</title>
            <link>https://standingpadanimations.github.io/posts/automatic-scrambling-distance/</link>
            <pubDate>Wed, 21 Dec 2022 04:30:44 -0600</pubDate>
            
            <guid>https://standingpadanimations.github.io/posts/automatic-scrambling-distance/</guid>
            <description>After I made my post yesterday regarding samples and light bounces, I was asked by a buddy a pretty interesting question.
I try to avoid making certain settings seem &amp;ldquo;magical&amp;rdquo; because with all magic, there&amp;rsquo;s a downside. For GPU rendering (sorry CPU renderers, this setting brings no benifit to y&amp;rsquo;all), one of these settings is known as
Automatic Scrambling Distance
While this setting does help with render times a lot, it also requires a lot of tweaking to make it render with little artifacts.</description>
            <content type="html"><![CDATA[<p>After I made my post yesterday regarding samples and light bounces, I was asked by a buddy a pretty interesting question.</p>

    <img src="/imgs/cycles-2/bean-question.png"  alt="Buddy asking question"  class="center"  style="border-radius: 8px;"  />


<p>I try to avoid making certain settings seem &ldquo;magical&rdquo; because with all magic, there&rsquo;s a downside. For GPU rendering (sorry CPU renderers, this setting brings no benifit to y&rsquo;all), one of these settings is known as</p>
<p><strong>Automatic Scrambling Distance</strong></p>
<p>While this setting does help with render times a lot, it also requires a lot of tweaking to make it render with little artifacts. I think the best way to make configuring this faster is to understand how it works under the hood.</p>
<h1 id="why-scramble-pixels-like-eggs">Why Scramble Pixels like Eggs?</h1>
<p>In a nutshell, scrambling distance represents how randomized each pixel&rsquo;s randomness value is. We talked about samples in <a href="https://standingpadanimations.github.io/posts/cycles-optimization/#samples">my last post</a>, so I suggest reading that first to get an understanding about what samples are.</p>
<p>&ldquo;Wait what?&rdquo;</p>
<p>I was confused at first, so I asked on the Erindale.xyz server (basically a lot of Blender nerds). After some back and forth, I got the following response.</p>

    <img src="/imgs/cycles-2/jc-response.png"  alt="JC explaining what scrambling does"  class="center"  style="border-radius: 8px;"  />


<p>&ldquo;I still don&rsquo;t get it.&rdquo;</p>
<p>Alright, let me make a diagram. Here&rsquo;s with a scrambling distance of 1.</p>

    <img src="/imgs/cycles-2/random-pixels.png"  alt="Pixels with random values"  class="center"  style="border-radius: 8px;"  />


<p>Here, each pixel have a randomized value+ and Cycles uses that to further randomize the samples that it spews into the scene (remember, samples are on a per pixel basis)</p>
<p><code>+ This should be more randomized, but it's a quick sketch</code></p>
<p>Now here&rsquo;s with a scrambling distance of 0.

    <img src="/imgs/cycles-2/uniform-pixels.png"  alt="Pixels with uniform values"  class="center"  style="border-radius: 8px;"  />

</p>
<p>The higher the scrambling distance, the more randomized these values are.</p>
<p>&ldquo;So if set to 0, there&rsquo;s no randomness with samples?&rdquo;</p>
<p>Not exactly. Samples must be released randomly to get finer details. Scrambling distance just makes things more random.</p>
<p>&ldquo;Oh I get it, so automatic scrambling distance just sets this automatically?&rdquo;</p>
<p>Yes.</p>
<p>&ldquo;But why does this feature help with render times? And what artifacts occur with it?&rdquo;</p>
<p>That brings us on to our next topic.</p>
<h1 id="all-magic-has-a-cost">All Magic has a Cost</h1>
<p>As I mentioned earlier, automatic scrambling distance can introduce some artifts, but can also massively help GPU users with render times.</p>
<p>But how does reducing pixel randomness help with render times?</p>
<p>This took a while to find. The Blender Docs say the following:</p>
<blockquote>
<p>Lower values Reduce randomization between pixels to improve GPU rendering performance, at the cost of possible rendering artifacts if set too low.</p>
</blockquote>
<p>Presumably it has something to do with VRAM, but I can&rsquo;t be exactly sure. My best guess from past experiance is that rendering is faster with more complex geometry, but I can&rsquo;t be exactly sure.</p>
<p>So what are some possible artifacts? Well JC has an example.

    <img src="/imgs/cycles-2/artifacts.png"  alt="Artifacts caused by an extremely low scrambling distance"  class="center"  style="border-radius: 8px;"  />

</p>
<p>Yikes, why does this happen?</p>
<p>It seems to go back to why path tracers try to randomize samples as much as possible: to get finer details about the geometry.</p>
<p>As you can see, all magic comes at a cost.</p>
<p>&ldquo;So why use it?&rdquo;</p>
<p>Because if used correctly, render times can be reduced 10 fold. It also tends to result in cleaner images, which when combined with adaptive sampling (I promise I&rsquo;ll make a detailed explanation on that sometime) can reduce render times. After all, the main reason we put up with long render times is to reduce the amount of noise in our scene.</p>
<p>&ldquo;So, should I use it?&rdquo;</p>
<p>If you use CPU rendering, no, it brings more issues for little benifit. If you use GPU rendering, then it depends on the scene. Personally, I just test it for each scene I do, then try to adjust the <strong>scrambling multiplier</strong> setting (which goes hand in hand to Automatic Scrambling Distance) before deciding if the artifacts are worth it. I don&rsquo;t use it most of the time (it really hates alpha transparency which I deal with a lot), but when I do it does work well.</p>
<p>That being said, it depends on the scene. There&rsquo;s never a specific number I can give that will automatically reduce render times (that&rsquo;s kinda the point behind making these posts).</p>
<p>I think that&rsquo;s all I really need to explain about Automatic Scrambling Distance. I&rsquo;ll see y&rsquo;all in the next post.</p>
]]></content>
        </item>
        
        <item>
            <title>Understanding Cycles Optimization: Spewing Samples and Bouncing Around like Crazy</title>
            <link>https://standingpadanimations.github.io/posts/cycles-optimization/</link>
            <pubDate>Tue, 20 Dec 2022 12:17:42 -0600</pubDate>
            
            <guid>https://standingpadanimations.github.io/posts/cycles-optimization/</guid>
            <description>Introduction We know Cycles is a pain in the butt to render. Specifically, the long render times. Of course, there&amp;rsquo;s tons of videos that talk about what settings to use, but those videos don&amp;rsquo;t explain what the settings do. So, exactly what settings do what?
Samples What are samples? In a nutshell, samples are rays, and the sample count represents how many rays are released by Cycles per pixel+ of the camera (yes Cycles starts from the camera as an optimization, all optical systems can be reversed).</description>
            <content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>We know Cycles is a pain in the butt to render. Specifically, the long render times. Of course, there&rsquo;s tons of videos that talk about what settings to use, but those videos don&rsquo;t explain what the settings do. So, exactly what settings do what?</p>
<h2 id="samples">Samples</h2>
<p>What are samples? In a nutshell, samples are rays, and the sample count represents how many rays are released by Cycles <strong>per pixel</strong>+ of the camera (yes Cycles starts from the camera as an optimization, all optical systems can be reversed).</p>
<p><code>+ Note: the per pixel thing is why higher resolutions take longer to render compared to lower resolutions. More pixels means more rays for your computer to deal with</code></p>
<p>Just understanding how Cycles works helps to understand how the rest of the settings to work.</p>
<p>So how is noise produced?</p>
<p>Well when Cycles spews rays like a toddler, those rays have to eventually meet a light source. This is called convergence, and the better rays can &ldquo;converge&rdquo; with light sources, the less noise the render will have. That&rsquo;s why bright scenes tend to have way less noise then dark scenes.</p>
<p>But when your scene doesn&rsquo;t allow for rays to converge easily, you need more samples (or rays) to make up for the bad convergence+</p>
<p><code>+ You could also make the scene brighter and reduce the exposure to make it darker, that's pretty common</code></p>
<p>Here&rsquo;s a totally amazing diagram explaining what I mean</p>

    <img src="/imgs/cycles-1/rays.png"  alt="Rays bouncing around"  class="center"  style="border-radius: 8px;"  />


<p>Here, we have a bunch of rays converging with the light source, but some also miss and go to the void.</p>
<hr>
<p>So now we understand how samples work, and why darker scenes tend to have less noise, so let&rsquo;s move on</p>
<p><code>Sidenote: You've probably heard of features like adaptive sampling and light portals. I personally think Blender's docs are good enough to explain these 2 features, as long as you understand how samples work. We can explain these features at a later date</code></p>
<h2 id="light-bounces">Light bounces</h2>
<p>&ldquo;Wait, rays don&rsquo;t bounce infinitely?&rdquo;</p>
<p>Well, in the real world they do, and ideally a good path tracing engine would also, but no computer as of writing can handle the amount of processing power it takes, and we&rsquo;re willing to approximate, so typically path tracing engines have a limit in the amount of bounces they perform <strong>per ray</strong>.</p>
<p>In a nutshell, light bounces are&hellip; the amount of times a ray will bounce before converging (that fancy word again), if they can. There&rsquo;s really 2 main settings to keep in mind</p>
<ul>
<li>Total light bounces (how many bounces a ray can bounce in total)</li>
<li>Material specific bounces (how many bounces can a ray bounce for a specific material)</li>
</ul>
<p>We&rsquo;re not going to focus too much on this, since I think it&rsquo;s self explanatory</p>
<p><code>Sidenote: You may also notice some caustics settings, as well as stuff like filter glossy. Caustics are patterns formed by reflection or reflection, whereas filter glossy allows for less noise (at the cost of accuracy).</code></p>
<p><code>In general, caustics should be disabled unless you have a reason not to, and filter glossy shouldn't be too high (a value of 1 is good enough for most scenes)</code></p>
<p>Here&rsquo;s a diagram (where we have a max of 3 bounces)

    <img src="/imgs/cycles-1/bounces.png"  alt="Light bounces"  class="center"  style="border-radius: 8px;"  />

</p>
<p>Note how the red ray bounces 3 times (which is the max), but the black ray only needs 2. Total light bounces is well, the total amount of light bounces a ray can take.</p>
<hr>
<h2 id="conclusion">Conclusion</h2>
<p>&ldquo;Wait, we&rsquo;re already done?&rdquo;</p>
<p>For now yes, I&rsquo;ll be splitting this into multiple parts. What I&rsquo;ve explained today should be enough for understanding how most of the settings in Cycles work. In later parts, I&rsquo;ll be focusing on certain settings, like adaptive sampling or shadow caustics (oooooo, fancy). But we&rsquo;ll leave it here for now.</p>
]]></content>
        </item>
        
        <item>
            <title>Moving On</title>
            <link>https://standingpadanimations.github.io/posts/moving-on/</link>
            <pubDate>Mon, 19 Dec 2022 19:59:51 -0600</pubDate>
            
            <guid>https://standingpadanimations.github.io/posts/moving-on/</guid>
            <description>Hi guys, I think yall might be confused why I&amp;rsquo;ve created a new website, let&amp;rsquo;s talk about it.
But first, what&amp;rsquo;s been going on recently?
Well in short, chaos. The actual situation is much longer, but to put it simply Twitter is no longer (in my opinion) a sustainable platform to remain on, so I moved to Mastodon.
Now because Mastodon allows you to verify your own sites, I&amp;rsquo;ve gone ahead and made this new one, since I felt like it.</description>
            <content type="html"><![CDATA[<p>Hi guys, I think yall might be confused why I&rsquo;ve created a new website, let&rsquo;s talk about it.</p>
<p>But first, what&rsquo;s been going on recently?</p>
<p>Well in short, chaos. The actual situation is much longer, but to put it simply Twitter is no longer (in my opinion) a sustainable platform to remain on, so I moved to Mastodon.</p>
<p>Now because Mastodon allows you to verify your own sites, I&rsquo;ve gone ahead and made this new one, since I felt like it.</p>
<p>Of course, some of you may have also noticed that I&rsquo;m not really doing much 3D. In short, I haven&rsquo;t had much time or motivation to continue working on 3D (but I&rsquo;m getting there, hopefully I&rsquo;ll think of something for New Years). I think I&rsquo;ll try this blogging thing for a bit (I did want to make some in depth guides to Cycles optimization and MCprep itself).</p>
<p>I&rsquo;m also learning how this Hugo thing (what I use to make this) works, so hopefully I&rsquo;ll be able to get my renders back up and running. It&rsquo;ll be a pain and a hassle, but I think it&rsquo;ll be worth it.</p>
]]></content>
        </item>
        
    </channel>
</rss>
