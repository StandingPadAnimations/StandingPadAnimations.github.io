<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on StandingPad&#39;s Corner</title>
        <link>https://standingpadanimations.github.io/posts/</link>
        <description>Recent content in Posts on StandingPad&#39;s Corner</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Sat, 11 Mar 2023 16:05:06 -0600</lastBuildDate>
        <atom:link href="https://standingpadanimations.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Problems of MCprep Development</title>
            <link>https://standingpadanimations.github.io/posts/problems-of-mcprep/</link>
            <pubDate>Sat, 11 Mar 2023 16:05:06 -0600</pubDate>
            
            <guid>https://standingpadanimations.github.io/posts/problems-of-mcprep/</guid>
            <description>As the MCprep 3.4.2 release date draws nearer, I think it&amp;rsquo;s important to remind users how MCprep development works, and how important it is that MCprep receives supports from the community. I feel like people have forgotten how much work goes into MCprep, and I think a little reminder wouldn&amp;rsquo;t hurt.
Overview Currently, MCprep only has 2 active maintainers (TheDuckCow and myself). While the MCprep GitHub repo says there&amp;rsquo;s 7, most of them haven&amp;rsquo;t contributed in a while: Now obviously TheDuckCow would have the most commits (411 at the time of writing this) since he&amp;rsquo;s been working on MCprep for almost 10 years now (yes, MCprep has been around for 10 years), with myself being behind with 96 commits.</description>
            <content type="html"><![CDATA[<p>As the MCprep 3.4.2 release date draws nearer, I think it&rsquo;s important to remind users how MCprep development works, and how important it is that MCprep receives supports from the community. I feel like people have forgotten how much work goes into MCprep, and I think a little reminder wouldn&rsquo;t hurt.</p>
<h2 id="overview">Overview</h2>
<p>Currently, MCprep only has 2 active maintainers (TheDuckCow and myself). While the MCprep GitHub repo says there&rsquo;s 7, most of them haven&rsquo;t contributed in a while:

    <img src="/imgs/mcprep-problems/maintainers.png"  alt="List of all the maintainers"  class="center"  style="border-radius: 8px;"  />

</p>
<p>Now obviously TheDuckCow would have the most commits (411 at the time of writing this) since he&rsquo;s been working on MCprep for almost 10 years now (yes, MCprep has been around for 10 years), with myself being behind with 96 commits. The rest have made a couple of commits here and there, and as far as I know that was before we had an official guide on contributing. So we&rsquo;re already spread thin when it comes to implementing new features and bug fixes (not factoring how we also have things to do IRL).</p>

    <img src="/imgs/mcprep-problems/dependency.png"  alt="xkcd comic that represents the situation"  class="center"  style="border-radius: 8px;"  />


<p>Like any open source project though, MCprep depends on outside contributions, and we have a couple. These are the users who have contributed in the past:</p>
<ul>
<li>zNightlord: Blender 3.4 Mix node compatability</li>
<li>Tiefseetauchner: Camera setup for panoramas</li>
<li>Ghost (Ok Ghost is just a placeholder GitHub uses for deleted accounts) + Bytzo: The modern texture generator we&rsquo;re all familier with</li>
</ul>
<p>I can literally count on one hand how many users have contributed to MCprep. In contrast, if we check the amount of unique IDs recorded by Google Analytics from MCprep 3.3.0 to 3.4.1 (for 2022), we find that <strong>10,740</strong> unique IDs have been recorded in the last year alone. If we add MCprep 3.2.5 and 3.2.5.1 to the mix, that number increases to <strong>10,867</strong>.</p>
<p>Now counting unique IDs isn&rsquo;t completely accurate, but it does give a general glimpse in the amount of MCprep users. If we add in that MCprep supports Blender versions 2.78-3.4 (that is <strong>15 versions</strong>) of Blender), it&rsquo;s impressive that MCprep receives quite stable updates every 4-6 months.</p>
<p>I&rsquo;m not giving these stats to make people feel bad, I&rsquo;m giving these stats to outline the reality of MCprep development. People seem to complain about MCprep features, while doing nothing to fix such issues. That isn&rsquo;t to say complaining about MCprep is a bad thing, but people seem to forget how spreadly thin we already are.</p>
<h2 id="how-the-community-can-help">How the Community Can Help</h2>
<p>The simplest way the community can help is improve the assets MCprep provides, as that&rsquo;s were most complaints seem to arise from. We already have <a href="https://github.com/TheDuckCow/MCprep/issues/new?assignees=&amp;labels=enhancement&amp;template=Asset-Submission.yaml">asset submissions open</a> for those interested. While most people submit rigs for new mobs, it&rsquo;s important to know that we also accept improved/replacement rigs for any existing mobs in MCprep (especially as BSS seems to no longer update their rig pack).</p>
<p>Also, report bugs on <a href="https://github.com/TheDuckCow/MCprep/issues">GitHub</a>, but please don&rsquo;t treat it like a support channel. That&rsquo;s what the <a href="https://discord.gg/mb8hBUC">MCprep Discord server</a> is for.</p>
<p>If you know how to code in Python and have some experience, then bug fixes are also welcome. We have a <a href="https://github.com/TheDuckCow/MCprep/blob/dev/CONTRIBUTING.md">guide on contributing code</a>. We do expect however a basic understanding of the Blender Python API (BPY) and Git. A good first contribution is PEP8 Formatting (basically reformatting MCprep&rsquo;s code to make it comply with PEP8 convention), since that&rsquo;s doesn&rsquo;t rely too much on BPY and is relatively easy (just reformatting code).</p>
]]></content>
        </item>
        
        <item>
            <title>MCprep Progress</title>
            <link>https://standingpadanimations.github.io/posts/mcprep-progress/</link>
            <pubDate>Sat, 25 Feb 2023 18:54:11 -0600</pubDate>
            
            <guid>https://standingpadanimations.github.io/posts/mcprep-progress/</guid>
            <description>UPDATE: As of March 11th, 2023, most of these are now confirmed for the 3.4.2 release
As some of you know, I&amp;rsquo;m an MCprep developer, and as part of what I do I work on adding features and fixing bugs in MCprep. Not that, I also help review pull requests and fix bugs.
The latest version of MCprep, MCprep v3.4.1 was released in August of last year. While it may seem like MCprep development is dying, that couldn&amp;rsquo;t be further from the truth.</description>
            <content type="html"><![CDATA[<p>UPDATE:
As of March 11th, 2023, most of these are now confirmed for the 3.4.2 release</p>
<p>As some of you know, I&rsquo;m an MCprep developer, and as part of what I do I work on adding features and fixing bugs in MCprep. Not that, I also help review pull requests and fix bugs.</p>
<p>The latest version of MCprep, MCprep v3.4.1 was released in August of last year. While it may seem like MCprep development is dying, that couldn&rsquo;t be further from the truth.</p>
<p>Here&rsquo;s some of the features that are in the works right now.</p>
<h1 id="prep-materials-without-emissive-nodes">Prep Materials without Emissive Nodes</h1>
<p>This may seem like something useless, but this feature was originally planned as a <a href="https://github.com/TheDuckCow/MCprep/pull/334">Cycles Optimizer improvement in 3.4.2</a> (before I left MCprep development for a bit of time) but has since been moved to the core of prep materials.</p>
<p>This means for users that don&rsquo;t need emissive nodes (like EEVEE users), they get a much easier node setup to work with (especially when using SEUS or Specular). Here&rsquo;s a comparison:

    <img src="/imgs/mcprep-progress/with-emission.png"  alt="With emissive nodes"  class="center"  style="border-radius: 8px;"  />



    <img src="/imgs/mcprep-progress/without-emission.png"  alt="Without emissive nodes"  class="center"  style="border-radius: 8px;"  />

</p>
<p>Wow, so much better.</p>
<p>But why was this feature originally going to be a Cycles optimizer feature? It&rsquo;s because in Cycles, mesh lights (like what MCprep generates) causes a lot more noise then normal lamps; by removing mesh lights we can reduce the amount of noise, which is a form of optimization.</p>
<p>It was decided in the middle of development however that it would be better to do it directly in prep materials rather then in the Cycles Optimizer, hence the move.</p>
<p>Currently it&rsquo;s a WIP, and you can follow its development <a href="https://github.com/TheDuckCow/MCprep/pull/369">on Github</a></p>
<h1 id="34-mix-node-support">3.4 Mix Node Support</h1>
<p>Blender 3.4 changed from MixRGB to a new general Mix node. While it does convert MixRGB nodes already, we can&rsquo;t rely on this. As such, zNightLord made a <a href="https://github.com/TheDuckCow/MCprep/pull/357">pull request</a> near the end of last year that implements support for the new Mix node, which was merged in January of this year.</p>
<p>Cool, just one slight issue: <a href="https://github.com/TheDuckCow/MCprep/issues/368">an indexing problem that prevented prep materials from working in certain conditions</a>. Originally thought to occur in edge cases, it was found in MCprep Kaion that the issue extended further into texture swap and what not.</p>
<p>This doesn&rsquo;t impact any release version of MCprep but regardless it needed to be fixed. <a href="https://github.com/TheDuckCow/MCprep/pull/374">A new pull request</a> fixes this issue, and should be merged in the next couple of days.</p>
<p>Even with the bug it&rsquo;s still an exciting feature for Blender compatibility, and who knows what we could do with the new Mix node.</p>
<h1 id="using-the-new-c-obj-importer">Using the New C++ OBJ Importer</h1>
<p>Be prepared for massive performance improvements when importing OBJs in Blender 3.5 and above in the next version of MCprep, there&rsquo;s work being done on using the new C++ OBJ importer shipped with Blender 3.1 and above.</p>
<p>But wait, why will this change only apply to Blender 3.5 and above? Well, until Blender 3.5, the C++ OBJ importer was missing certain features that MCprep used when importing OBJs, specifically importing split groups. It was debated on if the C++ OBJ importer should also be used between 3.1 and 3.4, but ultimately we settled on 3.5 and above only for feature parity. We don&rsquo;t want to deal with angry users afterall.</p>
<p>You can follow development on <a href="https://github.com/TheDuckCow/MCprep/pull/373">Github</a></p>
<h1 id="proper-aces-support">Proper ACES Support</h1>
<p>The same pull request that adds the use of the C++ importer also adds proper ACES support for importing OBJs.</p>
<p>&ldquo;But wait, didn&rsquo;t MCprep add ACES support a while back?&rdquo;</p>
<p>For prep materials it did, but not for OBJs. This has been a bug <a href="https://github.com/TheDuckCow/MCprep/issues/231">reported as far back as 2020</a>, and was thought an issue with Blender itself.</p>
<p>While that is true, it goes back to the MTL file generated by Minecraft world exporters. On another Github repo, it was <a href="https://github.com/ampas/aces-dev/issues/117">mentioned</a> that certain parts of the MTL could be commented out to prevent errors when importing, so we tested that, and indeed it fixed the issue.</p>
<p>So now MCprep will <a href="https://github.com/TheDuckCow/MCprep/pull/373">edit MTL files</a> when importing an OBJ (if anything other then Standard or Filmic is used).</p>
<p>&ldquo;But wait, that sounds bad&rdquo;</p>
<p>Yeah, that change is still the <a href="https://github.com/TheDuckCow/MCprep/pull/373#discussion_r1113917575">subject of debate</a>. What will likely happen is that MCprep will back up the MTL somewhere (maybe in a new folder) before editing, or something like that. Either way, it&rsquo;s still an exciting feature, and will fix a 3 year old bug in MCprep.</p>
<h1 id="checking-feature-compatability-with-objs">Checking Feature Compatability with OBJs</h1>
<p>This is a big one, MCprep will now check an OBJ&rsquo;s header (if exported with Mineways) to determine if texture swap and animate textures can be used without issues.</p>
<p>Here&rsquo;s some screenshots of how this looks. If you notice in the MCprep panel, as long as the right OBJ is selected, texture swap can&rsquo;t be used (because it was exported with incorrect settings).

    <img src="/imgs/mcprep-progress/incompatible-obj.png"  alt="Incompatible OBJ selected"  class="center"  style="border-radius: 8px;"  />



    <img src="/imgs/mcprep-progress/compatible-obj.png"  alt="Compatible OBJ selected"  class="center"  style="border-radius: 8px;"  />



    <img src="/imgs/mcprep-progress/multiple-obj.png"  alt="Multiple OBJs selected"  class="center"  style="border-radius: 8px;"  />

</p>
<p>This is a massive improvement as it prevents one of the most common issues we see, although it only apples to Mineways OBJs, due to them exporting a header (although <a href="https://github.com/TheDuckCow/MCprep/issues/371">we are looking into a standard header format</a> world exporter developers can use). Still better then nothing.</p>
<p>You can follow along <a href="https://github.com/TheDuckCow/MCprep/pull/372">here on Github</a></p>
<h1 id="how-can-i-test-these-new-features">How can I test these new features?</h1>
<p>Sadly MCprep doesn&rsquo;t provide pre-release builds, so you have 2 options:</p>
<ol>
<li>Compile MCprep from the <code>dev</code> branch</li>
<li>Use <a href="https://github.com/StandingPadAnimations/MCprep-Kaion">MCprep Kaion</a> (shameless self promo)</li>
</ol>
<p>The former is a bit complicated for newcomers, so let&rsquo;s look at the latter.</p>
<p>MCprep Kaion is a fork of MCprep specifically designed to help accelerate MCprep&rsquo;s development. As you might notice, most of these new features actually come from MCprep Kaion. One of Kaion&rsquo;s goals is to provide new features early to users easily. MCprep Kaion has all the features you&rsquo;d expect from MCprep, and much more, but there is a cost.</p>
<p>MCprep Kaion is not as well tested as MCprep itself, and often times issues will prop up. Many times it&rsquo;ll recieve multiple updates a week or even in a day, so it&rsquo;s not for those expecting something stable. Still, it aims to provide users with a good user experience, and is a good way of previewing new features.</p>
<p>It&rsquo;s also good if you want to test and catch bugs with new features, which helps massively.</p>
<h1 id="concluding-remarks">Concluding Remarks</h1>
<p>While MCprep&rsquo;s development may seem to be going at a slow pace, it&rsquo;s by no means dead. New features are coming, and that&rsquo;s just the beginning.</p>
]]></content>
        </item>
        
        <item>
            <title>EndorCore Is Shutting Down</title>
            <link>https://standingpadanimations.github.io/posts/endorcore-shutdown/</link>
            <pubDate>Thu, 09 Feb 2023 18:41:39 -0600</pubDate>
            
            <guid>https://standingpadanimations.github.io/posts/endorcore-shutdown/</guid>
            <description>On Feburary 11th I&amp;rsquo;ll be shutting my Discord bot EndorCore down.
Background A couple of years back, I coded a Discord bot using the Discord.py framework. It was the primary way I learned Python, and it was a blast while it lasted, but all good things some to an end.
Why For starters, EndorCore is no longer maintained. The last commit on the Github repo was in March of 2022. Because of this, EndorCore has slowly started to lose functionality as time passed and Discord changed the API.</description>
            <content type="html"><![CDATA[<p>On Feburary 11th I&rsquo;ll be shutting my Discord bot EndorCore down.</p>
<h1 id="background">Background</h1>
<p>A couple of years back, I coded a Discord bot using the Discord.py framework. It was the primary way I learned Python, and it was a blast while it lasted, but all good things some to an end.</p>
<h1 id="why">Why</h1>
<p>For starters, EndorCore is no longer maintained. The last commit on the Github repo was in March of 2022. Because of this, EndorCore has slowly started to lose functionality as time passed and Discord changed the API. Today, EndorCore is just a former husk of what it used to be.</p>
<h2 id="security-concerns">Security Concerns</h2>
<p>Right now EndorCore is ran on a Debian server, one that needs some serious maintanince. Back when I started it, it was the only Linux machine I had (these days I use Linux as my daily driver), and as such, stupid mistakes were made, such as:</p>
<ul>
<li>Not doing proper updates</li>
<li>Installing Python modules systemwide instead of in a virtual environment</li>
<li>Not isolating the process</li>
</ul>
<p>In addition, after recently going over the code, EndorCore has sections that in theory would be vulnerable to SQL injection, such as the following:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-py" data-lang="py"><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> user_result <span style="color:#f92672">==</span> <span style="color:#66d9ef">None</span>:
</span></span><span style="display:flex;"><span>            
</span></span><span style="display:flex;"><span>            cursor <span style="color:#f92672">=</span> <span style="color:#66d9ef">await</span> self<span style="color:#f92672">.</span>client<span style="color:#f92672">.</span>db<span style="color:#f92672">.</span>cursor()
</span></span><span style="display:flex;"><span>                
</span></span><span style="display:flex;"><span>            sql <span style="color:#f92672">=</span> <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;INSERT INTO Strikes(Guild_ID, User_ID, Strikes_Have) VALUES(</span><span style="color:#e6db74">{</span>ctx<span style="color:#f92672">.</span>guild<span style="color:#f92672">.</span>id<span style="color:#e6db74">}</span><span style="color:#e6db74">, </span><span style="color:#e6db74">{</span>member<span style="color:#f92672">.</span>id<span style="color:#e6db74">}</span><span style="color:#e6db74">, </span><span style="color:#e6db74">{</span>first_strike<span style="color:#e6db74">}</span><span style="color:#e6db74">)&#34;</span>
</span></span><span style="display:flex;"><span>            
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">await</span> ctx<span style="color:#f92672">.</span>respond(<span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;Striked </span><span style="color:#e6db74">{</span>member<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>)
</span></span><span style="display:flex;"><span>            
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">await</span> cursor<span style="color:#f92672">.</span>execute(sql)
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">await</span> self<span style="color:#f92672">.</span>client<span style="color:#f92672">.</span>db<span style="color:#f92672">.</span>commit()
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">await</span> cursor<span style="color:#f92672">.</span>close()
</span></span></code></pre></div><p>The issue lies in lines such as this:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-py" data-lang="py"><span style="display:flex;"><span>sql <span style="color:#f92672">=</span> <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;INSERT INTO Strikes(Guild_ID, User_ID, Strikes_Have) VALUES(</span><span style="color:#e6db74">{</span>ctx<span style="color:#f92672">.</span>guild<span style="color:#f92672">.</span>id<span style="color:#e6db74">}</span><span style="color:#e6db74">, </span><span style="color:#e6db74">{</span>member<span style="color:#f92672">.</span>id<span style="color:#e6db74">}</span><span style="color:#e6db74">, </span><span style="color:#e6db74">{</span>first_strike<span style="color:#e6db74">}</span><span style="color:#e6db74">)&#34;</span>
</span></span></code></pre></div><p>This should have never been a raw Python format string, and yet it is. Back when I was firsting adding SQL to the EndorCore codebase, lines like this were common. While many have been removed, some still remain. In theory Discord&rsquo;s API should prevent wrongful parameters from being passed, but I can&rsquo;t count on that.</p>
<p>EndorCore also currently runs an alpha build of Pycord 2.0 from around 2021, and still hasn&rsquo;t been updated. Updating the module would require massive code changes that I&rsquo;m not willing to do.</p>
<p>All of this should have spelled the end for EndorCore a long time ago, and fr that I&rsquo;m sorry.</p>
<h1 id="what-happens-now">What Happens Now</h1>
<p>EndorCore&rsquo;s codebase can be found on <a href="https://github.com/StandingPadAnimations/EndorCore">Github</a>, but I don&rsquo;t plan on writing documentation on how to deploy it. In my opinion, EndorCore&rsquo;s codebase should never be used anymore, so don&rsquo;t expect any support in working with it. If you plan to make a Discord bot to replace EndorCore, do not make the mistake of not maintaining it for a long time. Discord bots require the attention of a toddler.</p>
<p>It&rsquo;s was a good run while it lasted, but now EndorCore&rsquo;s days are numbered. You may continue using its commands until Feburary 11, 2022 when it&rsquo;ll be taken down, but I doubt many will work except for the incredibly simple ones.</p>
<p>Until then, cya later.</p>
]]></content>
        </item>
        
        <item>
            <title>How I did It: Calm After the Storm</title>
            <link>https://standingpadanimations.github.io/posts/calm-after-storm-render/</link>
            <pubDate>Wed, 01 Feb 2023 18:19:14 -0600</pubDate>
            
            <guid>https://standingpadanimations.github.io/posts/calm-after-storm-render/</guid>
            <description>Yes guys, I&amp;rsquo;m back.
Anyways, I recently had an idea and made this render: Not my best, but lets talk about how I made it.
Trees of Light For this, I used Bforartists 3.4, which is based off of Blender 3.5. Immediately I noticed a slowdown in viewport responsiveness. Thinking it was a driver, I went from Nvidia&amp;rsquo;s Studio drivers to their Game Ready drivers, but no difference.
Sidenote: Nvidia has 2 drivers, Studio and Game Ready.</description>
            <content type="html"><![CDATA[<p>Yes guys, I&rsquo;m back.</p>
<p>Anyways, I recently had an idea and made this render:

    <img src="/imgs/calm-after-storm/CalmAfterTheStormWatermarked.png"  alt="Recent render I made of a city after a storm"  class="center"  style="border-radius: 8px;"  />

</p>
<p>Not my best, but lets talk about how I made it.</p>
<h1 id="trees-of-light">Trees of Light</h1>
<p>For this, I used Bforartists 3.4, which is based off of Blender 3.5. Immediately I noticed a slowdown in viewport responsiveness. Thinking it was a driver, I went from Nvidia&rsquo;s Studio drivers to their Game Ready drivers, but no difference.</p>
<p><code>Sidenote: Nvidia has 2 drivers, Studio and Game Ready. The difference is that Game Ready is less stable but recieves updates quicker, whereas Studio is much more stable. In general I recommend Studio since it has better stability, but if you do mostly gaming with newer PC games, Game Ready is an option.</code></p>
<p>It turns out in <code>Sampling &gt; Lights</code>, there&rsquo;s a new feature called Light Tree. It&rsquo;s a new 3.5 feature and from what I can tell is meant to reduce noise with lights. It&rsquo;s amazing for rendering, but an absolute nightmare for the viewport. Until Blender makes it an option one can enable for the viewport and render individually, I recommend disabling it until it&rsquo;s time to render. Hopefully the next BFA update will disable this by default.</p>
<h1 id="l-i-g-h-t-s">L I G H T S</h1>
<p>This was honestly my least favorite part of the render, but I know people are going to comment on it.</p>
<p>There&rsquo;s not many light sources in the scene, other then the sky and some street lamps. There&rsquo;s also some lights to seperate the character from the backround, but honestly I dislike how they&rsquo;re noticable in the rest of the environment (Blender, <strong>PLEASE</strong> add light linking), but what can you do?</p>
<p>They&rsquo;re pretty simple point lights with an IES texture and a blackbody node.</p>
<p>&ldquo;IES textures?&rdquo;</p>
<p><em>sigh</em></p>
<p>&ldquo;._.&rdquo;</p>
<p>Basically IES textures are textures that represent light falloff. They&rsquo;re much more accurate then simply using normal Blender lights.</p>
<h1 id="color-grading-stubbing-your-toe-on-the-corner-of-a-wall">Color Grading: Stubbing Your Toe on the Corner of a Wall</h1>
<p>This is one of the things I hate the most about this. The thing is, there&rsquo;s not much color in the first place, so color grading was going to be difficult.</p>
<p>I used what I learned from my <a href="https://standingpadanimations.github.io/posts/new-years-2023/">New Year&rsquo;s render</a> and attempted to do some color grading. The results were better then what the original render, but I still don&rsquo;t like how it turned out. What can you do though <code>¯\_(ツ)_/¯</code>?</p>
<h1 id="some-updates">Some Updates</h1>
<p>Wait wait wait, don&rsquo;t click away, I know this isn&rsquo;t related, but I have some exiciting updates.</p>
<p>For starters, I&rsquo;ve been working on some stuff for a project that a group at my school was doing. The TLDR is that they&rsquo;ve been working on a VR game, and one of them asked if I knew Blender. I showed them this website and got on the team. Here&rsquo;s some screenshots of what I&rsquo;ve been working on (no materials because it has to go to Unity):

    <img src="/imgs/calm-after-storm/image.png"  alt="Blinding screenshot of a forest in Blender"  class="center"  style="border-radius: 8px;"  />



    <img src="/imgs/calm-after-storm/image-2.png"  alt="Another blinding screnshot. If you can&#39;t see, consider yourself lucky"  class="center"  style="border-radius: 8px;"  />

</p>
<p>So that&rsquo;s what I&rsquo;ve been doing.</p>
<p>I&rsquo;m also pleased to announce MCprep Kaion, a fork of MCprep that aims to bring experimental features to users (as well as adding new features with the goal of going upstream eventually). You can find it <a href="https://github.com/StandingPadAnimations/MCprep-Kaion">here</a></p>
<p>Anyway, that&rsquo;s all I really have to say, cya.</p>
]]></content>
        </item>
        
        <item>
            <title>Farewell for Now</title>
            <link>https://standingpadanimations.github.io/posts/goodbye-for-now/</link>
            <pubDate>Sat, 14 Jan 2023 13:16:29 -0600</pubDate>
            
            <guid>https://standingpadanimations.github.io/posts/goodbye-for-now/</guid>
            <description>I just don&amp;rsquo;t know how else to put it, I&amp;rsquo;m leaving the Minecraft animation world. After what David RB has done, I feel that it&amp;rsquo;s not right for me to continue.
For anyone that hasn&amp;rsquo;t heard, David RB, the original owner of Black Plasma Studios, has recently been exposed for being abusive and grooming a minor.
I initially refrained from making a stance, but after reviewing the evidence released by Posidon, I&amp;rsquo;ve decided I can no longer refrain from making a stance.</description>
            <content type="html"><![CDATA[<p>I just don&rsquo;t know how else to put it, I&rsquo;m leaving the Minecraft animation world. After what David RB has done, I feel that it&rsquo;s not right for me to continue.</p>
<p>For anyone that hasn&rsquo;t heard, David RB, the original owner of Black Plasma Studios, has recently been exposed for being abusive and grooming a minor.</p>
<p>I initially refrained from making a stance, but after reviewing <a href="https://www.youtube.com/watch?v=kWV90K8-HD8">the evidence released by Posidon</a>, I&rsquo;ve decided I can no longer refrain from making a stance.</p>
<p>What David did was absolutely horrific, and may he be cursed till his final breath.</p>
<p>After everything that has happened, I do not feel right continuing Minecraft rendering. Some may object to this, but this has been haunting me for the past 12+ hours, and I think it&rsquo;s for the best. This also means I will stop working on MCprep. I know that leaves <a href="https://github.com/TheDuckCow/MCprep/pull/334">2</a> <a href="https://github.com/TheDuckCow/MCprep/pull/348">pull requests</a> unfinished, but I think the open source community will get them done eventually.</p>
<p>Will I return eventually? That&rsquo;s up to fate to decide.
Will I stop posting on this blog? No, but things will be changing.</p>
<p>I know it feels disingenuous to not leave y&rsquo;all with a render, but I don&rsquo;t feel like making one, so here&rsquo;s <a href="https://www.mediafire.com/file/50wf9xvrfphgdq7/Only+renders.7z/file">the files of the renders I feel like releasing</a> (note that there&rsquo;s 2 scenes in each file, Scene and Compositing). If you want the file for a specific render, just DM me on Instagram (or email me if you prefer) and I&rsquo;ll try to find and send it to you. You can find those <a href="https://standingpadanimations.github.io/">here</a>.</p>
<p>Well, I guess that&rsquo;s all I have to say about this, farewell Minecraft animation community. Till we meet again.</p>
]]></content>
        </item>
        
        <item>
            <title>Songs of War Has Always Been Dead; Just Let It Rest in Peace For Once</title>
            <link>https://standingpadanimations.github.io/posts/songs-of-war-is-dead-let-it-rest-in-peace/</link>
            <pubDate>Fri, 06 Jan 2023 22:18:00 -0600</pubDate>
            
            <guid>https://standingpadanimations.github.io/posts/songs-of-war-is-dead-let-it-rest-in-peace/</guid>
            <description>On June 14th, 2020, Black Plasma Studios announced the plan to cancel Songs of War Seasons 2 and 3, an animation series 5 years in the making, with a story uncontested by anything else. Among the reasons cited include lack of revenue, lack of viewership, and burnout.
Of course, people were understandbly upset, and couldn&amp;rsquo;t accept the inevitable.
Almost 3 years later, there are still people who can&amp;rsquo;t accept that Songs of War is dead.</description>
            <content type="html"><![CDATA[<p>On June 14th, 2020, Black Plasma Studios announced the plan to cancel Songs of War Seasons 2 and 3, an animation series 5 years in the making, with a story uncontested by anything else. Among the reasons cited include lack of revenue, lack of viewership, and burnout.</p>
<p>Of course, people were understandbly upset, and couldn&rsquo;t accept the inevitable.</p>
<p>Almost 3 years later, there are still people who can&rsquo;t accept that Songs of War is dead.</p>
<h1 id="the-great-scism-of-songs-of-war">The Great Scism of Songs of War</h1>
<p>Immediately following the annoucement, groups began forming with the goal to finish what had been left: Songs of War Season 2 and 3. Particurally, 2 main groups came about: Knights of Ardonia and Helios</p>
<p><code>Important Sidenote: I used to be a scene lighter for Helios, but left due to some internal disputes. Perhaps in the future (unless other former/current staff of Helios don't want me to), I'll write about what happened. This is mostly one of my hot takes, so of course you may take this as you will.</code></p>
<p>There were also a handful of people like Megste, who did the entire series with much smaller teams with hard deadlines. In general, a great fracturing had occured.</p>
<p>If you were a Songs of War fan during this period, you now had to follow the development of multiple studios, each with their own motivations and goals. As such, these groups would just have drama non-stop. This would end up leaving a bad taste in people&rsquo;s mouths.</p>
<h1 id="david-didnt-want-to-continue-so-stop-asking-him">David Didn&rsquo;t Want to Continue, so Stop Asking Him</h1>
<blockquote>
<p>&ldquo;I personally didn&rsquo;t want to invest
another four years of my life into one
series unless it was just doing like
phenomenally good and you know I
was about 25 at the time I think, I&rsquo;m 26
now and I didn&rsquo;t really want to be like
almost 30 years old and just finishing
some minecraft animation stuff&rdquo;
-David R. B.</p>
</blockquote>
<p>Looking at the comments of the cancelation annoucement, it&rsquo;s impressive how much people didn&rsquo;t pay attention to the actual announcement. Here&rsquo;s some of the most recent comments (as of writing):</p>
<blockquote>
<p>&ldquo;Please The Whole Community Is Begging  For Next Song Of War. Now Do It Don&rsquo;t Care About Views Because You Need To Believe In Your Creation In Your Talent. No Matter What Happen But Never Ever Give Up. You Must Return With Banger The Banger We All Want. Don&rsquo;t Loose Hope. She Believed In You When No One Does (Mother). I Know It&rsquo;s Painful It&rsquo;s Hard But You Must Return Or Be The Dead. I Hope This Message Create Something On Your Mind. If I Am A Millionaire I Will Donate 100 Million To That Animation (Song Of War) For Next Part. But Unfortunately  I Am 16 Year Kid Who Had Almost No Money, No Love, Broken. Love You And Your Team. I Hope You Read That Message. Peace .Thank You!&rdquo;</p>
</blockquote>
<blockquote>
<p>&ldquo;bro i became depressed for 2 weeks bc this vid was released PLS BRING BACK SONGS OF WAR&rdquo;</p>
</blockquote>
<blockquote>
<p>&ldquo;But dude the movie got above 50 million people didn&rsquo;t watch episode cuz the all watched ur movie and also most people don&rsquo;t want to spend some time finding right episode&rdquo;</p>
</blockquote>
<p>Guys, chill, I get why you&rsquo;re upset but it&rsquo;s been <strong>3 years</strong>. <del>In that time, David has been working on an FPS game called Arcadian Rift and based on his devlogs sounds way happier and less stressed then during Songs of War production</del>+. If David didn&rsquo;t want to continue, then that&rsquo;s his decision and we should respect that. He&rsquo;s human with his own life, not a robot, how hard is that to understand?</p>
<p><code>+ While writing this I was told that David canceled Arcadian Rift due to some IRL issues. As of writing, I do not know the full scope of the issue, but needless to say I think it's even more important that we don't keep bothering David over Songs of War</code></p>
<h1 id="lets-accept-the-death-of-songs-of-war-and-let-it-rest-in-peace">Let&rsquo;s Accept the Death of Songs of War, and Let It Rest in Peace</h1>
<p>&ldquo;But why were the assets, scene files, and script released if he didn&rsquo;t want us to continue Songs of War?&rdquo;</p>
<p>Because Songs of War assets can be used for other original ideas. The assets contain a treasure trove of items and models most people would pay money for someone to make, and he released them for free. The scene files are also something that can be opened and inspected to see how the David R.B (and the many other Songs of War animators) did stuff. Much of their techniques would remain mostly a secret till the end of times if they had never been released.</p>
<p>When I look at how Songs of War assets are being used, I mostly see 2 things:</p>
<ul>
<li>Continuation of Songs of War</li>
<li>A spin-off of Songs of War</li>
</ul>
<p>And everytime I just think, &ldquo;That&rsquo;s not why the assets and scene files were released.&rdquo; Imagine what awesome and unique ideas we would have if people wearn&rsquo;t so focused on abusing the Songs of War hype and moved on. In a way, Songs of War would live longer if we just started using the assets for stuff that isn&rsquo;t Songs of War.</p>
<p>I&rsquo;m guilty of this too, but I&rsquo;ve moved on, and frankly I think the rest of us should to. We&rsquo;ve been digging up the grave of Songs of War way too much, we&rsquo;ve abused the hype way too much, and I think it&rsquo;s time we let it rest in peace.</p>
<p>If not for accepting Songs of War&rsquo;s death, at least for letting Songs of War live on beyond itself.</p>
]]></content>
        </item>
        
        <item>
            <title>Hot Take: We&#39;re Teaching People to Treat Help Channels like Google</title>
            <link>https://standingpadanimations.github.io/posts/issues-with-helping-too-much/</link>
            <pubDate>Tue, 03 Jan 2023 18:58:15 -0600</pubDate>
            
            <guid>https://standingpadanimations.github.io/posts/issues-with-helping-too-much/</guid>
            <description>Anyone who&amp;rsquo;s spent a good amount of time in a help channel on a Minecraft animation server can related to this; you go on help and support, and see the following:
One person asking how to import Optifine shaders That guy using 2.79 who gets offended when you politely suggest updating to a new version The person who wants to import animation from a youtube video (I swear I&amp;rsquo;m not making this up) 50 people asking why material mode is so slow 10 more people asking how to show textures 1 or 2 people asking how to move bones (seriously guys?</description>
            <content type="html"><![CDATA[<p>Anyone who&rsquo;s spent a good amount of time in a help channel on a Minecraft animation server can related to this; you go on help and support, and see the following:</p>
<ul>
<li>One person asking how to import Optifine shaders</li>
<li>That guy using 2.79 who gets offended when you politely suggest updating to a new version</li>
<li>The person who wants to import animation from a youtube video (I swear I&rsquo;m not making this up)</li>
<li>50 people asking why material mode is so slow</li>
<li>10 more people asking how to show textures</li>
<li>1 or 2 people asking how to move bones (seriously guys?)</li>
<li>The poor soul who&rsquo;s dedicated to helping these people (F in the chat for them)</li>
<li>The &ldquo;cool&rdquo; 12 year old saying bruh every sentence</li>
</ul>
<p>Basically, people treating help and support as Google. How did we get here?</p>
<h2 id="important-clarification">Important Clarification</h2>
<p>Don&rsquo;t take this as me hating the concept of help channels. I think they&rsquo;re a good idea, when used correctly. My problem is that we&rsquo;re teaching people to use help channels for issue that can easily be fixed with some digging on Google (or issues that are covered in basic tutorials). In addition, we&rsquo;re also teaching these people not to accept help if it doesn&rsquo;t relate to Minecraft animation or even Blender as a whole, which can not be overlooked.</p>
<h1 id="person--google">Person ≠ Google</h1>
<p>It shouldn&rsquo;t be understated how powerful Google is. Unlike humans, Google is always there, and it can understand the most non-sensical thing. Humans can not, but we&rsquo;re teaching people to treat humans as such.</p>
<p>I&rsquo;ve seen so many cases of people getting annoyed when waiting for someone to help them with their issue (an issue that 3/4ths of the time can easily be resolved with Google), or people throwing fits in channels when a person doesn&rsquo;t (understandably) understand the problem when given something like &ldquo;why is x happening?&rdquo; (remember, half of 3D software is seeing).</p>
<p>And yet, how many times have I seen someone say &ldquo;next time, start with Google&rdquo; or something along those lines? Not even in double digits.</p>
<p>It&rsquo;s understandable; in an age where people get offended over really small things, we don&rsquo;t want to offend others. However, at what point does not wanting to offend others cross a line?</p>
<p>When a person is unable to first solve an issue on their own.</p>
<h1 id="lets-stop-feeding-bad-habits">Let&rsquo;s Stop Feeding Bad Habits</h1>
<p>&ldquo;Wow Standing, that&rsquo;s mean&rdquo;</p>
<p>It has to be said, we need to stop feeding the behavior that causes people to not use their most powerful tools: their brain box and Google.</p>
<p>&ldquo;How?&rdquo;</p>
<p>A method so magical, very few people know it, and those that do are afraid to show it.</p>
<p><strong>Link the solution to the issue at hand from Google and tell them to read it</strong></p>
<p>or better yet</p>
<p><strong>Search the issue on google and link the results page (you know, the page with all the links)</strong></p>
<p>Seriously, is it that hard? Are we so concerned with offending other people that we can&rsquo;t even tell them to use Google and go from there, and to use help channels if Google is of no use?</p>
<p>Yes, apparently we are; I know it&rsquo;s a hard pill to swallow, but we&rsquo;ve created this mess, and it is our job to clean up this mess.</p>
]]></content>
        </item>
        
        <item>
            <title>How I Did It: 2023 New Year&#39;s Render</title>
            <link>https://standingpadanimations.github.io/posts/new-years-2023/</link>
            <pubDate>Sat, 31 Dec 2022 00:00:00 -0600</pubDate>
            
            <guid>https://standingpadanimations.github.io/posts/new-years-2023/</guid>
            <description>It&amp;rsquo;s now New Year&amp;rsquo;s Eve, so I made a new years render: This is perhaps the most complicated render I have done to date. I started just before Christmas and finished in about 3 to 4 days.
Hologram Shenanigans One of the things I wanted to do was 3D holograms, because I&amp;rsquo;ve never done that before. I first followed a Blender Guru tutorial, and the final node setup does essentially the following:</description>
            <content type="html"><![CDATA[<p>It&rsquo;s now New Year&rsquo;s Eve, so I made a new years render:

    <img src="/imgs/new-years/NewYearsWatermarked.png"  alt="New Years render, I&#39;m bad at describing sadly"  class="center"  style="border-radius: 8px;"  />

</p>
<p>This is perhaps the most complicated render I have done to date. I started just before Christmas and finished in about 3 to 4 days.</p>
<h1 id="hologram-shenanigans">Hologram Shenanigans</h1>
<p>One of the things I wanted to do was 3D holograms, because I&rsquo;ve never done that before. I first followed a Blender Guru tutorial, and the final node setup does essentially the following:</p>
<ul>
<li>Create a grid</li>
<li>Duplicate and stack a bunch of those grids</li>
<li>Get rid of any point on those grids that doesn&rsquo;t touch the model (in this case Ferris the Rust mascot)</li>
<li>Add some icospheres to those points</li>
<li>Create a bunch of curve objects from those points</li>
<li>Merge them at the bottom vertex (represented by a sphere)</li>
</ul>
<p>&ldquo;If it works, all is good, right?&rdquo;</p>
<p><em>blank stare</em></p>
<p>&ldquo;Right?&rdquo;</p>
<p>Well it works, but one slight issue,</p>
<p><strong>Cycles does not like dealing with thousands of curve objects</strong></p>
<p>Rendering a 3D hologram (even on its own) using Blender Guru&rsquo;s method was an absolute pain, and I was prepared to just suck it and deal with it. However, after I mentioned how much of a pain it would be to render on the Erindale server, Slinkcreated a far more optimized version of the hologram.</p>

    <img src="/imgs/new-years/slink-solution.png"  alt="Slink comes to the rescue"  class="center"  style="border-radius: 8px;"  />


<p>Essentially, instead of making thousands of curve objects, he made a setup that takes the model, extrudes it downwards, and then merges the verticies into a single point. The result is the same, but with far less render time.</p>
<p>And that&rsquo;s not all. He also changed how the &ldquo;pixels&rdquo; were created, by creating a cube and scattering points in the volume of that cube, instead of using a stack of grids. This meant that using text as a model was actually fesible, hence the &ldquo;It&rsquo;s 2023&rdquo; hologram.</p>
<p>Now I tried to see if there was a silver lining with Blender Guru&rsquo;s method. Maybe it was somehow more simpler to explain and expand upon, or maybe it could handle certain edge cases. As far as I can tell however, it&rsquo;s simply not that good. Sure if you&rsquo;re learning geometry nodes or want some practice, it&rsquo;s fine, but in terms of actually using it (especially in Cycles), it&rsquo;s pretty horrific to say the least.</p>
<h1 id="lets-not-burn-peoples-eyes-please">Let&rsquo;s Not Burn People&rsquo;s Eyes Please</h1>
<p>Near the end, I found a short that explained how auto exposure works, and I remembered an addon that allowed for auto exposure.</p>
<p>Cool except one issue: it just wouldn&rsquo;t work with AgX</p>
<p>&ldquo;Why not just use Filmic then?&rdquo;</p>
<p>Well&hellip;</p>

    <img src="/imgs/new-years/filmic-sucks.png"  alt="Ungodly color skewing"  class="center"  style="border-radius: 8px;"  />


<p>As you can see, Filmic just looks bad compared to AgX, so that would be a no-no.</p>
<p>I looked into the addon code and found that each look was accosiated to some exposure values (where the develeoper got those values, idk), which added some complexity. In addition, even with my code changes, the addon still refused to work with AgX.</p>
<p>So I scoured the depths of Google and found <a href="https://pedroplopes.itch.io/autoexposure">this auto exposure node</a>, which seemed to work, although with some drawbacks.</p>
<p>Honestly having it as an addon would have been preferable, but sometimes you got to work with what you got.</p>
<h1 id="focus-issues-lets-add-some-effects">Focus Issues? Let&rsquo;s Add Some Effects!</h1>
<p>Even while making the scene I felt there were some &ldquo;focus&rdquo; issues. In other words, I felt like the scene was too chaotic to direct the viewer&rsquo;s eye.</p>
<p>The last time I had this much detail was back in the October 2020 MCprep contest, but back then there wasn&rsquo;t a focus. This time, there was a focus, so I had to figure out a way to maintain that focus.</p>

    <img src="/imgs/new-years/focus-issues.png"  alt="Seriously, the people on the Erindale server are smart"  class="center"  style="border-radius: 8px;"  />


<p>Oh</p>
<p>So anyway I added a vignette effect. It&rsquo;s not really noticable, but I think it does a good job at keeping focus.</p>
<h1 id="optimization">Optimization</h1>
<p>Like previously, I disabled clamping as it creates more issues then it solves, and I removed all mesh lights from the scene. What makes this scene different was the crazy amount of geometry I had to deal with</p>
<p>We already talked about the holograms (before Slink did his magic), but there was also a lot of fireworks (which are all particles), so I simply used a decimate modifier on the bits to reduce as much geometry as possible.</p>
<p>Other then that, not much else is different from my previous scene.</p>
<h1 id="small-tangent-on-the-background-city">Small Tangent on the Background City</h1>
<p>When I originally rendered this, there wasn&rsquo;t much of a background. However, the day before, I realized that I could duplicate the OBJ and render with that as the background.</p>
<p>Let&rsquo;s just say that was a nightmare. I had to go from Bforartists back to stock Blender due to a weird issue I had while rerendering. I think the result was worth it though, and honestly those couple of hours of debugging were worth it.</p>
<h1 id="acknowledgments-for-this-year">Acknowledgments for this year</h1>
<p>I would first like to thank the people who made the scifi map I used to render this and many other renders. <a href="https://twitter.com/ElysiumFire"><strong>ElysiumFire</strong></a> (the people who made the map I used for this and many other renders) are extremely talented when it comes to map making. You may know them for Neon District, the map used to showcase Minecraft with RTX. The fact they also made the map free to download is something I&rsquo;ll always be grateful for.</p>
<p>I have linked their map before on Twitter, but no one reads that so I feel obligated to link it here. The map can be found <a href="https://www.planetminecraft.com/project/cyberpunk-project-timelapse/"><strong>here</strong></a>.</p>
<p>I would also like to thank the people on the <a href="https://discord.gg/erindale-xyz-314131871376080906"><strong>Erindale.xyz server</strong></a>, they&rsquo;re extremely friendly and talented (as I&rsquo;ve shown in a couple of my other posts), and the community is welcoming even to Minecraft rendering. Words can not describe how grateful I am.</p>
<p>And finally, I would like to thank anyone who has supported me over the past year. I couldn&rsquo;t have done it without you.</p>
<p>Happy new year everyone!</p>
]]></content>
        </item>
        
        <item>
            <title>Meet Jason the Cat</title>
            <link>https://standingpadanimations.github.io/posts/meet-jason-the-cat/</link>
            <pubDate>Mon, 26 Dec 2022 21:37:01 -0600</pubDate>
            
            <guid>https://standingpadanimations.github.io/posts/meet-jason-the-cat/</guid>
            <description>Hey guys, just a small IRL update, my family got a cat today! His name is Jason and he&amp;rsquo;s 8 months old. Here&amp;rsquo;s some photos:</description>
            <content type="html"><![CDATA[<p>Hey guys, just a small IRL update, my family got a cat today! His name is Jason and he&rsquo;s 8 months old. Here&rsquo;s some photos:</p>

    <img src="/imgs/jason-the-cat/cat-1.png"  alt="Cute cat looking at the camera"  class="center"  style="border-radius: 8px;"  />



    <img src="/imgs/jason-the-cat/cat-2.png"  alt="I guess the cat owns our shoes now"  class="center"  style="border-radius: 8px;"  />


]]></content>
        </item>
        
        <item>
            <title>Happy Holidays</title>
            <link>https://standingpadanimations.github.io/posts/happy-holidays/</link>
            <pubDate>Sun, 25 Dec 2022 13:30:22 -0600</pubDate>
            
            <guid>https://standingpadanimations.github.io/posts/happy-holidays/</guid>
            <description>Happy holidays everyone! Sorry I couldn&amp;rsquo;t post yesterday (it was my dad&amp;rsquo;s birthday and birthdays + Christmas Eve don&amp;rsquo;t really mix well).
Of course, I myself don&amp;rsquo;t celebrate Christmas (cultural reasons) so I&amp;rsquo;m just waiting for New Years. I&amp;rsquo;ve been working on a New Years render, so here&amp;rsquo;s a WIP
It&amp;rsquo;s also the second week of winter break for me, which means in about a week I&amp;rsquo;ll have to return back to doing IRL stuff.</description>
            <content type="html"><![CDATA[<p>Happy holidays everyone! Sorry I couldn&rsquo;t post yesterday (it was my dad&rsquo;s birthday and birthdays + Christmas Eve don&rsquo;t really mix well).</p>
<p>Of course, I myself don&rsquo;t celebrate Christmas (cultural reasons) so I&rsquo;m just waiting for New Years. I&rsquo;ve been working on a New Years render, so here&rsquo;s a WIP</p>

    <img src="/imgs/happy-holidays/wip-1.png"  alt="WIP of a new years render I&#39;ve been working on"  class="center"  style="border-radius: 8px;"  />


<p>It&rsquo;s also the second week of winter break for me, which means in about a week I&rsquo;ll have to return back to doing IRL stuff. Not sure how I&rsquo;ll continue writing, but I&rsquo;ll figure it out eventually.</p>
<p>Speaking of IRL stuff, my Rust crate <a href="https://github.com/Resurgence-VM-Development/Resurgence">Resurgence</a> (a virtual machine backend that can easily be embeded in a Rust project) is almost ready for its first alpha. I don&rsquo;t think I&rsquo;ve ever talked about it on my old website (let alone here), not sure why as it&rsquo;s a big part of what I do normally.</p>
<p>I think for the rest of this week I&rsquo;ll be working on MCprep/Resurgence and some IRL work I have remaining.</p>
<p>That&rsquo;s pretty much all I have to write about today, cya!</p>
]]></content>
        </item>
        
        <item>
            <title>How I Did It: Hacking Holograms Render</title>
            <link>https://standingpadanimations.github.io/posts/scale-render-process/</link>
            <pubDate>Thu, 22 Dec 2022 16:16:09 -0600</pubDate>
            
            <guid>https://standingpadanimations.github.io/posts/scale-render-process/</guid>
            <description>I recently had the motivation to make the following render
As you can see, there&amp;rsquo;s a lot of reflections, some long test, volumetrics, and other stuff. Since I don&amp;rsquo;t do much Minecraft rendering anymore, I think I&amp;rsquo;ll impart some insight into some of the more technial bits.
GCC&amp;rsquo;s Time to Shine &amp;ldquo;GCC?&amp;rdquo;
Basically, I needed to make a lot of text. Now, I could slam my keyboard a couple of times, but as a nerd I felt like it was the perfect oppertunity to use C++ to generate long text.</description>
            <content type="html"><![CDATA[<p>I recently had the motivation to make the following render</p>

    <img src="/imgs/scale-render/final-render.png"  alt="Cool render I made, can&#39;t really put it in words"  class="center"  style="border-radius: 8px;"  />


<p>As you can see, there&rsquo;s a lot of reflections, some long test, volumetrics, and other stuff. Since I don&rsquo;t do much Minecraft rendering anymore, I think I&rsquo;ll impart some insight into some of the more technial bits.</p>
<h1 id="gccs-time-to-shine">GCC&rsquo;s Time to Shine</h1>
<p>&ldquo;GCC?&rdquo;</p>
<p>Basically, I needed to make a <strong>lot</strong> of text. Now, I could slam my keyboard a couple of times, but as a nerd I felt like it was the perfect oppertunity to use C++ to generate long text.</p>
<p>See, in the <code>*NIX</code> world (so MacOS and Linux), we have a compiler called GCC. GCC is infamous for generating horrific errors (I remember times where it would never stop printing). Since these errors are logged in the terminal (which made masking easy) and they were very technical, I decided to take advantage of those errors to make long text.</p>
<p>I yoinked the following code from <a href="https://stackoverflow.com/questions/49653235/shortening-gcc-error-messages">StackOverFlow</a>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;string&gt;</span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;iostream&gt;</span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">struct</span> <span style="color:#a6e22e">Z</span>{};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">void</span> <span style="color:#a6e22e">foo</span>() {
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    std<span style="color:#f92672">::</span>string s;
</span></span><span style="display:flex;"><span>    Z z;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s 
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>}
</span></span></code></pre></div><p>and I put it through GCC, which printed the following error:</p>
<details>
  <summary>Long Error, Click to View</summary>
  <div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp: In function <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">void</span> foo()<span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">15</span><span style="color:#f92672">:</span> error: no match <span style="color:#66d9ef">for</span> <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span><span style="color:#960050;background-color:#1e0010">&#39;</span> (operand types are <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>ostream<span style="color:#960050;background-color:#1e0010">&#39;</span> {aka <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span><span style="color:#960050;background-color:#1e0010">&#39;</span>} and <span style="color:#e6db74">&#39;Z&#39;</span>)
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>     <span style="color:#f92672">~~~~~~~~~~^~~~</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">108</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> (<span style="color:#f92672">*</span>)(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span>)) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(__ostream_type<span style="color:#f92672">&amp;</span> (<span style="color:#f92672">*</span>__pf)(__ostream_type<span style="color:#f92672">&amp;</span>))
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">108</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> (<span style="color:#f92672">*</span>)(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span> {aka <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;&amp;</span> (<span style="color:#f92672">*</span>)(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;&amp;</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>}
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">117</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ios_type<span style="color:#f92672">&amp;</span> (<span style="color:#f92672">*</span>)(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ios_type<span style="color:#f92672">&amp;</span>)) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ios_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ios<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(__ios_type<span style="color:#f92672">&amp;</span> (<span style="color:#f92672">*</span>__pf)(__ios_type<span style="color:#f92672">&amp;</span>))
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">117</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;::</span>__ios_type<span style="color:#f92672">&amp;</span> (<span style="color:#f92672">*</span>)(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;::</span>__ios_type<span style="color:#f92672">&amp;</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span> {aka <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ios<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;&amp;</span> (<span style="color:#f92672">*</span>)(std<span style="color:#f92672">::</span>basic_ios<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;&amp;</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>}
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">127</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>ios_base<span style="color:#f92672">&amp;</span> (<span style="color:#f92672">*</span>)(std<span style="color:#f92672">::</span>ios_base<span style="color:#f92672">&amp;</span>)) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(ios_base<span style="color:#f92672">&amp;</span> (<span style="color:#f92672">*</span>__pf) (ios_base<span style="color:#f92672">&amp;</span>))
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">127</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>ios_base<span style="color:#f92672">&amp;</span> (<span style="color:#f92672">*</span>)(std<span style="color:#f92672">::</span>ios_base<span style="color:#f92672">&amp;</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">166</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">long</span> <span style="color:#66d9ef">int</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">long</span> __n)
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">166</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">long</span> <span style="color:#66d9ef">int</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">170</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">long</span> <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">int</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">long</span> __n)
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">170</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">long</span> <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">int</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">174</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">bool</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">bool</span> __n)
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">174</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">bool</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">693</span>,
</span></span><span style="display:flex;"><span>                 from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>bits<span style="color:#f92672">/</span>ostream.tcc:<span style="color:#ae81ff">91</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">short</span> <span style="color:#66d9ef">int</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>bits<span style="color:#f92672">/</span>ostream.tcc:<span style="color:#ae81ff">91</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">short</span> <span style="color:#66d9ef">int</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">181</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">short</span> <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">int</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">short</span> __n)
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">181</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">short</span> <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">int</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">693</span>,
</span></span><span style="display:flex;"><span>                 from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>bits<span style="color:#f92672">/</span>ostream.tcc:<span style="color:#ae81ff">105</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">int</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>bits<span style="color:#f92672">/</span>ostream.tcc:<span style="color:#ae81ff">105</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">int</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">192</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">int</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">int</span> __n)
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">192</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">int</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">201</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">long</span> <span style="color:#66d9ef">long</span> <span style="color:#66d9ef">int</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">long</span> <span style="color:#66d9ef">long</span> __n)
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">201</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">long</span> <span style="color:#66d9ef">long</span> <span style="color:#66d9ef">int</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">205</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">long</span> <span style="color:#66d9ef">long</span> <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">int</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">long</span> <span style="color:#66d9ef">long</span> __n)
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">205</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">long</span> <span style="color:#66d9ef">long</span> <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">int</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">220</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">double</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">double</span> __f)
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">220</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">double</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">224</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">float</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">float</span> __f)
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">224</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">float</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">232</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">long</span> <span style="color:#66d9ef">double</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">long</span> <span style="color:#66d9ef">double</span> __f)
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">232</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">long</span> <span style="color:#66d9ef">double</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">245</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">const</span> <span style="color:#66d9ef">void</span><span style="color:#f92672">*</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__ostream_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>       <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(<span style="color:#66d9ef">const</span> <span style="color:#66d9ef">void</span><span style="color:#f92672">*</span> __p)
</span></span><span style="display:flex;"><span>       <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">245</span><span style="color:#f92672">:</span><span style="color:#ae81ff">7</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">const</span> <span style="color:#66d9ef">void</span><span style="color:#f92672">*</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">693</span>,
</span></span><span style="display:flex;"><span>                 from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>bits<span style="color:#f92672">/</span>ostream.tcc:<span style="color:#ae81ff">119</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__streambuf_type<span style="color:#f92672">*</span>) [with _CharT <span style="color:#f92672">=</span> <span style="color:#66d9ef">char</span>; _Traits <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>; std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>__streambuf_type <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_streambuf<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;</span>]<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;::</span>
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>bits<span style="color:#f92672">/</span>ostream.tcc:<span style="color:#ae81ff">119</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   no known conversion <span style="color:#66d9ef">for</span> argument <span style="color:#ae81ff">1</span> from <span style="color:#e6db74">&#39;Z&#39;</span> to <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;::</span>__streambuf_type<span style="color:#f92672">*</span><span style="color:#960050;background-color:#1e0010">&#39;</span> {aka <span style="color:#960050;background-color:#1e0010">&#39;</span>std<span style="color:#f92672">::</span>basic_streambuf<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;*</span><span style="color:#960050;background-color:#1e0010">&#39;</span>}
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>string:<span style="color:#ae81ff">52</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">1</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>bits<span style="color:#f92672">/</span>basic_string.h:<span style="color:#ae81ff">6284</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_CharT</span>, <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span>, <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Alloc</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span>, <span style="color:#66d9ef">const</span> std<span style="color:#f92672">::</span>__cxx11<span style="color:#f92672">::</span>basic_string<span style="color:#f92672">&lt;</span>_CharT, _Traits, _Alloc<span style="color:#f92672">&gt;&amp;</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> __os,
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>bits<span style="color:#f92672">/</span>basic_string.h:<span style="color:#ae81ff">6284</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   <span style="color:#e6db74">&#39;Z&#39;</span> is not derived from <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">const</span> std<span style="color:#f92672">::</span>__cxx11<span style="color:#f92672">::</span>basic_string<span style="color:#f92672">&lt;</span>_CharT, _Traits, _Alloc<span style="color:#f92672">&gt;</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>bits<span style="color:#f92672">/</span>ios_base.h:<span style="color:#ae81ff">46</span>,
</span></span><span style="display:flex;"><span>                 from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ios:<span style="color:#ae81ff">42</span>,
</span></span><span style="display:flex;"><span>                 from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">38</span>,
</span></span><span style="display:flex;"><span>                 from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>system_error:<span style="color:#ae81ff">217</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_CharT</span>, <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span>, <span style="color:#66d9ef">const</span> std<span style="color:#f92672">::</span>error_code<span style="color:#f92672">&amp;</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> __os, <span style="color:#66d9ef">const</span> error_code<span style="color:#f92672">&amp;</span> __e)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>system_error:<span style="color:#ae81ff">217</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   cannot convert <span style="color:#e6db74">&#39;z&#39;</span> (type <span style="color:#e6db74">&#39;Z&#39;</span>) to type <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">const</span> std<span style="color:#f92672">::</span>error_code<span style="color:#f92672">&amp;</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">497</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_CharT</span>, <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span>, _CharT)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> __out, _CharT __c)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">497</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   deduced conflicting types <span style="color:#66d9ef">for</span> parameter <span style="color:#960050;background-color:#1e0010">&#39;</span>_CharT<span style="color:#960050;background-color:#1e0010">&#39;</span> (<span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">char</span><span style="color:#960050;background-color:#1e0010">&#39;</span> and <span style="color:#e6db74">&#39;Z&#39;</span>)
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">502</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_CharT</span>, <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span>, <span style="color:#66d9ef">char</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> __out, <span style="color:#66d9ef">char</span> __c)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">502</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   cannot convert <span style="color:#e6db74">&#39;z&#39;</span> (type <span style="color:#e6db74">&#39;Z&#39;</span>) to type <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">char</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">508</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span>, <span style="color:#66d9ef">char</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> __out, <span style="color:#66d9ef">char</span> __c)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">508</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   cannot convert <span style="color:#e6db74">&#39;z&#39;</span> (type <span style="color:#e6db74">&#39;Z&#39;</span>) to type <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">char</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">514</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span>, <span style="color:#66d9ef">signed</span> <span style="color:#66d9ef">char</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> __out, <span style="color:#66d9ef">signed</span> <span style="color:#66d9ef">char</span> __c)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">514</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   cannot convert <span style="color:#e6db74">&#39;z&#39;</span> (type <span style="color:#e6db74">&#39;Z&#39;</span>) to type <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">signed</span> <span style="color:#66d9ef">char</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">519</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span>, <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">char</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> __out, <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">char</span> __c)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">519</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   cannot convert <span style="color:#e6db74">&#39;z&#39;</span> (type <span style="color:#e6db74">&#39;Z&#39;</span>) to type <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">char</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">539</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_CharT</span>, <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span>, <span style="color:#66d9ef">const</span> _CharT<span style="color:#f92672">*</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> __out, <span style="color:#66d9ef">const</span> _CharT<span style="color:#f92672">*</span> __s)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">539</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   mismatched types <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">const</span> _CharT<span style="color:#f92672">*</span><span style="color:#960050;background-color:#1e0010">&#39;</span> and <span style="color:#e6db74">&#39;Z&#39;</span>
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">693</span>,
</span></span><span style="display:flex;"><span>                 from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>bits<span style="color:#f92672">/</span>ostream.tcc:<span style="color:#ae81ff">321</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_CharT</span>, <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span>, <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span>_CharT, _Traits<span style="color:#f92672">&gt;&amp;</span> __out, <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> __s)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>bits<span style="color:#f92672">/</span>ostream.tcc:<span style="color:#ae81ff">321</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   cannot convert <span style="color:#e6db74">&#39;z&#39;</span> (type <span style="color:#e6db74">&#39;Z&#39;</span>) to type <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">556</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span>, <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> __out, <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> __s)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">556</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   cannot convert <span style="color:#e6db74">&#39;z&#39;</span> (type <span style="color:#e6db74">&#39;Z&#39;</span>) to type <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">569</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span>, <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">signed</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> __out, <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">signed</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> __s)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">569</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   cannot convert <span style="color:#e6db74">&#39;z&#39;</span> (type <span style="color:#e6db74">&#39;Z&#39;</span>) to type <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">const</span> <span style="color:#66d9ef">signed</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">574</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Traits</span><span style="color:#f92672">&gt;</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span>, <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span>, _Traits<span style="color:#f92672">&gt;&amp;</span> __out, <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> __s)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">574</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span> note:   cannot convert <span style="color:#e6db74">&#39;z&#39;</span> (type <span style="color:#e6db74">&#39;Z&#39;</span>) to type <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">const</span> <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> z; <span style="color:#75715e">// typo - meant s
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>                  <span style="color:#f92672">^</span>
</span></span><span style="display:flex;"><span>In file included from C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>iostream:<span style="color:#ae81ff">39</span>,
</span></span><span style="display:flex;"><span>                 from .<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">682</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note: candidate: <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Ostream</span>, <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Tp</span><span style="color:#f92672">&gt;</span> <span style="color:#66d9ef">typename</span> std<span style="color:#f92672">::</span>enable_if<span style="color:#f92672">&lt;</span>std<span style="color:#f92672">::</span>__and_<span style="color:#f92672">&lt;</span>std<span style="color:#f92672">::</span>__not_<span style="color:#f92672">&lt;</span>std<span style="color:#f92672">::</span>is_lvalue_reference<span style="color:#f92672">&lt;</span>_Tp<span style="color:#f92672">&gt;</span> <span style="color:#f92672">&gt;</span>, std<span style="color:#f92672">::</span>__is_convertible_to_basic_ostream<span style="color:#f92672">&lt;</span>_Ostream<span style="color:#f92672">&gt;</span>, std<span style="color:#f92672">::</span>__is_insertable<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">typename</span> std<span style="color:#f92672">::</span>__is_convertible_to_basic_ostream<span style="color:#f92672">&lt;</span>_Tp<span style="color:#f92672">&gt;::</span>__ostream_type, <span style="color:#66d9ef">const</span> _Tp<span style="color:#f92672">&amp;</span>, <span style="color:#66d9ef">void</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">&gt;::</span>value, <span style="color:#66d9ef">typename</span> std<span style="color:#f92672">::</span>__is_convertible_to_basic_ostream<span style="color:#f92672">&lt;</span>_Tp<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&gt;::</span>type std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(_Ostream<span style="color:#f92672">&amp;&amp;</span>, <span style="color:#66d9ef">const</span> _Tp<span style="color:#f92672">&amp;</span>)<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(_Ostream<span style="color:#f92672">&amp;&amp;</span> __os, <span style="color:#66d9ef">const</span> _Tp<span style="color:#f92672">&amp;</span> __x)
</span></span><span style="display:flex;"><span>     <span style="color:#f92672">^~~~~~~~</span>
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">682</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> note:   <span style="color:#66d9ef">template</span> argument deduction<span style="color:#f92672">/</span>substitution failed:
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream: In substitution of <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Ostream</span>, <span style="color:#66d9ef">class</span> <span style="color:#a6e22e">_Tp</span><span style="color:#f92672">&gt;</span> <span style="color:#66d9ef">typename</span> std<span style="color:#f92672">::</span>enable_if<span style="color:#f92672">&lt;</span>std<span style="color:#f92672">::</span>__and_<span style="color:#f92672">&lt;</span>std<span style="color:#f92672">::</span>__not_<span style="color:#f92672">&lt;</span>std<span style="color:#f92672">::</span>is_lvalue_reference<span style="color:#f92672">&lt;</span>_Tp<span style="color:#f92672">&gt;</span> <span style="color:#f92672">&gt;</span>, std<span style="color:#f92672">::</span>__is_convertible_to_basic_ostream<span style="color:#f92672">&lt;</span>_Ostream<span style="color:#f92672">&gt;</span>, std<span style="color:#f92672">::</span>__is_insertable<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">typename</span> std<span style="color:#f92672">::</span>__is_convertible_to_basic_ostream<span style="color:#f92672">&lt;</span>_Tp<span style="color:#f92672">&gt;::</span>__ostream_type, <span style="color:#66d9ef">const</span> _Tp<span style="color:#f92672">&amp;</span>, <span style="color:#66d9ef">void</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">&gt;::</span>value, <span style="color:#66d9ef">typename</span> std<span style="color:#f92672">::</span>__is_convertible_to_basic_ostream<span style="color:#f92672">&lt;</span>_Tp<span style="color:#f92672">&gt;::</span>__ostream_type<span style="color:#f92672">&gt;::</span>type std<span style="color:#f92672">::</span><span style="color:#66d9ef">operator</span><span style="color:#f92672">&lt;&lt;</span>(_Ostream<span style="color:#f92672">&amp;&amp;</span>, <span style="color:#66d9ef">const</span> _Tp<span style="color:#f92672">&amp;</span>) [with _Ostream <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;&amp;</span>; _Tp <span style="color:#f92672">=</span> Z]<span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>.<span style="color:#960050;background-color:#1e0010">\</span>file.cpp:<span style="color:#ae81ff">11</span><span style="color:#f92672">:</span><span style="color:#ae81ff">18</span><span style="color:#f92672">:</span>   required from here
</span></span><span style="display:flex;"><span>C:<span style="color:#f92672">/</span>Program Files<span style="color:#f92672">/</span>mingw<span style="color:#f92672">-</span>w64<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">-</span>posix<span style="color:#f92672">-</span>seh<span style="color:#f92672">-</span>rt_v6<span style="color:#f92672">-</span>rev0<span style="color:#f92672">/</span>mingw64<span style="color:#f92672">/</span>lib<span style="color:#f92672">/</span>gcc<span style="color:#f92672">/</span>x86_64<span style="color:#f92672">-</span>w64<span style="color:#f92672">-</span>mingw32<span style="color:#f92672">/</span><span style="color:#ae81ff">8.1.0</span><span style="color:#f92672">/</span>include<span style="color:#f92672">/</span>c<span style="color:#f92672">++/</span>ostream:<span style="color:#ae81ff">682</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5</span><span style="color:#f92672">:</span> error: no type named <span style="color:#960050;background-color:#1e0010">&#39;</span>type<span style="color:#960050;background-color:#1e0010">&#39;</span> in <span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#66d9ef">struct</span> <span style="color:#a6e22e">std</span><span style="color:#f92672">::</span>enable_if<span style="color:#f92672">&lt;</span>false, std<span style="color:#f92672">::</span>basic_ostream<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;&amp;&gt;</span><span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span></code></pre></div>
</details>

<p>I then made a mask using a screenshot of it:

    <img src="/imgs/scale-render/error.png"  alt="Error message from earlier, just as a screenshot"  class="center"  style="border-radius: 8px;"  />

</p>
<p>And use that as part of the hologram in the render.</p>
<h1 id="optimizing">Optimizing</h1>
<p>There&rsquo;s a lot I have to say about optimizing. First off, here&rsquo;s a screenshots of the viewport with the volumetrics:

    <img src="/imgs/scale-render/viewport-1.png"  alt="Cool viewport screenshot"  class="center"  style="border-radius: 8px;"  />

</p>
<p>&ldquo;But wait, where&rsquo;s the cool godrays in the final render?&rdquo;</p>
<p>I added those in compositing. In general I think it&rsquo;s easier to use the sunbeams node for godrays.</p>
<p>But oh boy did volumetrics become a pain in the but to work with. I enabled homogenous in both world and material settings to make rendering faster.

    <img src="/imgs/scale-render/homogenous-1.png"  alt="Homogenous in the world settings"  class="center"  style="border-radius: 8px;"  />

</p>

    <img src="/imgs/scale-render/homogenous-2.png"  alt="Homogenous in the material settings"  class="center"  style="border-radius: 8px;"  />


<p>Those helped with render times a little, but there was still the issue with fireflies.</p>
<h2 id="magic-has-costs-even-clamping">Magic has Costs, even Clamping</h2>
<blockquote>
<p>You will observe with concern how long a useful truth may be known and exist, before it is generally received and practiced on.</p>
<p>Benjamin Franklin; July 31st, 1786</p>
</blockquote>
<p>In the Minecraft animation world, we&rsquo;re taught to use a clamping value of 1, not fully understanding what clamping does.</p>
<p>Clamping limits how bright a pixel can be. While it does reduce fireflies, it also reduces desirable highlights to nothing, and can make reflections look mundane. In one of my previous renders, clamping caused reflections to appear darker, an issue which I almost assumed to be a Cycles bug.</p>
<p>HJ Hornbeck in his blog post <a href="https://sinmantyx.wordpress.com/2015/03/18/perfect-clamp-1/">&ldquo;The Perfect Clamp&rdquo;</a> explains how to achive a good clamp value that gives good highlights with little fireflies, but the process isn&rsquo;t as strightforward as you might think. It requires a whole lot of rendering test renders, measuring RGB values, and refinement to get a good result. In the end, I decided to avoid clamping completely, and use a value of 0 (which diables it).</p>
<p>As the developer behind the MCprep Cycles Optimizer, it may worth it to remove clamping entirely from the optimizer, for it can be extremely destructive when not taking into account the scene itself. Like all settings, clamping should be treated as a scene-dependent thing, not something to just throw the same value at.</p>
<p>Most fireflies in Minecraft scenes are caused by mesh lights anyway, and after making the hologram emit no light and using a lamp to emulate the light from it, most of the fireflies were nowhere to be found.</p>
<p>As far as I can tell, clamping seems to be used as a convinient solution way to solve fireflies caused by mesh lights. If only we had a way of automatically generating lamps for emissive blocks, then we wouldn&rsquo;t have this issue anyway (I have been working on a feature to remove mesh lighting from MCprep materials, so that&rsquo;s a start).</p>
<p>Tldr: Clamping is a terrible solution to fix fireflies caused by mesh lights. We&rsquo;re better off removing mesh lights entirely and using lamps. Clamping should be treated the same as <a href="https://standingpadanimations.github.io/posts/automatic-scrambling-distance/#all-magic-has-a-cost">Scrambling Distance</a>, an option that requires careful consideration and refinement.</p>
<p>Here&rsquo;s the settings I used for this particular render (specifically light paths and color management):

    <img src="/imgs/scale-render/general-settings.png"  alt="General settings"  class="center"  style="border-radius: 8px;"  />

</p>
<p>These settings are for just this scene (and I use a GTX 1660 Super), so don&rsquo;t copy it hoping it will help with render times. Optimization is scene dependent, not uniform.</p>
<h2 id="sidenote-color">Sidenote: Color</h2>
<p>One might notice the lack of Filmic in exchange for AgX. I&rsquo;ve written about AgX on my old website but the tldr is that AgX is a better version of Filmic with more color nuance. Once you use it, you can&rsquo;t go back to Filmic.</p>
<h1 id="compositing">Compositing</h1>
<p>I do 2 rounds of compositing. The first round is denoising with <a href="https://pidgeontools.gumroad.com/l/SuperImageDenoiser">SID</a>, and the second round is where all the magic happens.</p>
<p>Before:

    <img src="/imgs/scale-render/before-comp.png"  alt="Before compositing"  class="center"  style="border-radius: 8px;"  />

</p>
<p>After:

    <img src="/imgs/scale-render/after-comp.png"  alt="After compositing"  class="center"  style="border-radius: 8px;"  />

</p>
<p>This is also where I added all those fancy godray effects. I used the denoising depth pass to seperate the world and structures, and plugged it into the sun beams node (btw, Blender devs, if you&rsquo;re reading this, please optimize it or let it take advantage of the GPU, it is horrifically annoying to edit), did some color magic, and added back in. The result is a godly looking background.</p>
<h1 id="tldr">Tldr</h1>
<p>Basically, a lot of work in optimizing, discovering how bad clamping is, compositing magic, all to make a nice looking render.</p>
<p>Ight, that&rsquo;s it, cya.</p>
]]></content>
        </item>
        
        <item>
            <title>Understanding Cycles Optimization: The Magic Behind Scrambling Pixels like Eggs</title>
            <link>https://standingpadanimations.github.io/posts/automatic-scrambling-distance/</link>
            <pubDate>Wed, 21 Dec 2022 04:30:44 -0600</pubDate>
            
            <guid>https://standingpadanimations.github.io/posts/automatic-scrambling-distance/</guid>
            <description>After I made my post yesterday regarding samples and light bounces, I was asked by a buddy a pretty interesting question.
I try to avoid making certain settings seem &amp;ldquo;magical&amp;rdquo; because with all magic, there&amp;rsquo;s a downside. For GPU rendering (sorry CPU renderers, this setting brings no benifit to y&amp;rsquo;all), one of these settings is known as
Automatic Scrambling Distance
While this setting does help with render times a lot, it also requires a lot of tweaking to make it render with little artifacts.</description>
            <content type="html"><![CDATA[<p>After I made my post yesterday regarding samples and light bounces, I was asked by a buddy a pretty interesting question.</p>

    <img src="/imgs/cycles-2/bean-question.png"  alt="Buddy asking question"  class="center"  style="border-radius: 8px;"  />


<p>I try to avoid making certain settings seem &ldquo;magical&rdquo; because with all magic, there&rsquo;s a downside. For GPU rendering (sorry CPU renderers, this setting brings no benifit to y&rsquo;all), one of these settings is known as</p>
<p><strong>Automatic Scrambling Distance</strong></p>
<p>While this setting does help with render times a lot, it also requires a lot of tweaking to make it render with little artifacts. I think the best way to make configuring this faster is to understand how it works under the hood.</p>
<h1 id="why-scramble-pixels-like-eggs">Why Scramble Pixels like Eggs?</h1>
<p>In a nutshell, scrambling distance represents how randomized each pixel&rsquo;s randomness value is. We talked about samples in <a href="https://standingpadanimations.github.io/posts/cycles-optimization/#samples">my last post</a>, so I suggest reading that first to get an understanding about what samples are.</p>
<p>&ldquo;Wait what?&rdquo;</p>
<p>I was confused at first, so I asked on the Erindale.xyz server (basically a lot of Blender nerds). After some back and forth, I got the following response.</p>

    <img src="/imgs/cycles-2/jc-response.png"  alt="JC explaining what scrambling does"  class="center"  style="border-radius: 8px;"  />


<p>&ldquo;I still don&rsquo;t get it.&rdquo;</p>
<p>Alright, let me make a diagram. Here&rsquo;s with a scrambling distance of 1.</p>

    <img src="/imgs/cycles-2/random-pixels.png"  alt="Pixels with random values"  class="center"  style="border-radius: 8px;"  />


<p>Here, each pixel have a randomized value+ and Cycles uses that to further randomize the samples that it spews into the scene (remember, samples are on a per pixel basis)</p>
<p><code>+ This should be more randomized, but it's a quick sketch</code></p>
<p>Now here&rsquo;s with a scrambling distance of 0.

    <img src="/imgs/cycles-2/uniform-pixels.png"  alt="Pixels with uniform values"  class="center"  style="border-radius: 8px;"  />

</p>
<p>The higher the scrambling distance, the more randomized these values are.</p>
<p>&ldquo;So if set to 0, there&rsquo;s no randomness with samples?&rdquo;</p>
<p>Not exactly. Samples must be released randomly to get finer details. Scrambling distance just makes things more random.</p>
<p>&ldquo;Oh I get it, so automatic scrambling distance just sets this automatically?&rdquo;</p>
<p>Yes.</p>
<p>&ldquo;But why does this feature help with render times? And what artifacts occur with it?&rdquo;</p>
<p>That brings us on to our next topic.</p>
<h1 id="all-magic-has-a-cost">All Magic has a Cost</h1>
<p>As I mentioned earlier, automatic scrambling distance can introduce some artifts, but can also massively help GPU users with render times.</p>
<p>But how does reducing pixel randomness help with render times?</p>
<p>This took a while to find. The Blender Docs say the following:</p>
<blockquote>
<p>Lower values Reduce randomization between pixels to improve GPU rendering performance, at the cost of possible rendering artifacts if set too low.</p>
</blockquote>
<p>Presumably it has something to do with VRAM, but I can&rsquo;t be exactly sure. My best guess from past experiance is that rendering is faster with more complex geometry, but I can&rsquo;t be exactly sure.</p>
<p>So what are some possible artifacts? Well JC has an example.

    <img src="/imgs/cycles-2/artifacts.png"  alt="Artifacts caused by an extremely low scrambling distance"  class="center"  style="border-radius: 8px;"  />

</p>
<p>Yikes, why does this happen?</p>
<p>It seems to go back to why path tracers try to randomize samples as much as possible: to get finer details about the geometry.</p>
<p>As you can see, all magic comes at a cost.</p>
<p>&ldquo;So why use it?&rdquo;</p>
<p>Because if used correctly, render times can be reduced 10 fold. It also tends to result in cleaner images, which when combined with adaptive sampling (I promise I&rsquo;ll make a detailed explanation on that sometime) can reduce render times. After all, the main reason we put up with long render times is to reduce the amount of noise in our scene.</p>
<p>&ldquo;So, should I use it?&rdquo;</p>
<p>If you use CPU rendering, no, it brings more issues for little benifit. If you use GPU rendering, then it depends on the scene. Personally, I just test it for each scene I do, then try to adjust the <strong>scrambling multiplier</strong> setting (which goes hand in hand to Automatic Scrambling Distance) before deciding if the artifacts are worth it. I don&rsquo;t use it most of the time (it really hates alpha transparency which I deal with a lot), but when I do it does work well.</p>
<p>That being said, it depends on the scene. There&rsquo;s never a specific number I can give that will automatically reduce render times (that&rsquo;s kinda the point behind making these posts).</p>
<p>I think that&rsquo;s all I really need to explain about Automatic Scrambling Distance. I&rsquo;ll see y&rsquo;all in the next post.</p>
]]></content>
        </item>
        
        <item>
            <title>Understanding Cycles Optimization: Spewing Samples and Bouncing Around like Crazy</title>
            <link>https://standingpadanimations.github.io/posts/cycles-optimization/</link>
            <pubDate>Tue, 20 Dec 2022 12:17:42 -0600</pubDate>
            
            <guid>https://standingpadanimations.github.io/posts/cycles-optimization/</guid>
            <description>Introduction We know Cycles is a pain in the butt to render. Specifically, the long render times. Of course, there&amp;rsquo;s tons of videos that talk about what settings to use, but those videos don&amp;rsquo;t explain what the settings do. So, exactly what settings do what?
Samples What are samples? In a nutshell, samples are rays, and the sample count represents how many rays are released by Cycles per pixel+ of the camera (yes Cycles starts from the camera as an optimization, all optical systems can be reversed).</description>
            <content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>We know Cycles is a pain in the butt to render. Specifically, the long render times. Of course, there&rsquo;s tons of videos that talk about what settings to use, but those videos don&rsquo;t explain what the settings do. So, exactly what settings do what?</p>
<h2 id="samples">Samples</h2>
<p>What are samples? In a nutshell, samples are rays, and the sample count represents how many rays are released by Cycles <strong>per pixel</strong>+ of the camera (yes Cycles starts from the camera as an optimization, all optical systems can be reversed).</p>
<p><code>+ Note: the per pixel thing is why higher resolutions take longer to render compared to lower resolutions. More pixels means more rays for your computer to deal with</code></p>
<p>Just understanding how Cycles works helps to understand how the rest of the settings to work.</p>
<p>So how is noise produced?</p>
<p>Well when Cycles spews rays like a toddler, those rays have to eventually meet a light source. This is called convergence, and the better rays can &ldquo;converge&rdquo; with light sources, the less noise the render will have. That&rsquo;s why bright scenes tend to have way less noise then dark scenes.</p>
<p>But when your scene doesn&rsquo;t allow for rays to converge easily, you need more samples (or rays) to make up for the bad convergence+</p>
<p><code>+ You could also make the scene brighter and reduce the exposure to make it darker, that's pretty common</code></p>
<p>Here&rsquo;s a totally amazing diagram explaining what I mean</p>

    <img src="/imgs/cycles-1/rays.png"  alt="Rays bouncing around"  class="center"  style="border-radius: 8px;"  />


<p>Here, we have a bunch of rays converging with the light source, but some also miss and go to the void.</p>
<hr>
<p>So now we understand how samples work, and why darker scenes tend to have less noise, so let&rsquo;s move on</p>
<p><code>Sidenote: You've probably heard of features like adaptive sampling and light portals. I personally think Blender's docs are good enough to explain these 2 features, as long as you understand how samples work. We can explain these features at a later date</code></p>
<h2 id="light-bounces">Light bounces</h2>
<p>&ldquo;Wait, rays don&rsquo;t bounce infinitely?&rdquo;</p>
<p>Well, in the real world they do, and ideally a good path tracing engine would also, but no computer as of writing can handle the amount of processing power it takes, and we&rsquo;re willing to approximate, so typically path tracing engines have a limit in the amount of bounces they perform <strong>per ray</strong>.</p>
<p>In a nutshell, light bounces are&hellip; the amount of times a ray will bounce before converging (that fancy word again), if they can. There&rsquo;s really 2 main settings to keep in mind</p>
<ul>
<li>Total light bounces (how many bounces a ray can bounce in total)</li>
<li>Material specific bounces (how many bounces can a ray bounce for a specific material)</li>
</ul>
<p>We&rsquo;re not going to focus too much on this, since I think it&rsquo;s self explanatory</p>
<p><code>Sidenote: You may also notice some caustics settings, as well as stuff like filter glossy. Caustics are patterns formed by reflection or reflection, whereas filter glossy allows for less noise (at the cost of accuracy).</code></p>
<p><code>In general, caustics should be disabled unless you have a reason not to, and filter glossy shouldn't be too high (a value of 1 is good enough for most scenes)</code></p>
<p>Here&rsquo;s a diagram (where we have a max of 3 bounces)

    <img src="/imgs/cycles-1/bounces.png"  alt="Light bounces"  class="center"  style="border-radius: 8px;"  />

</p>
<p>Note how the red ray bounces 3 times (which is the max), but the black ray only needs 2. Total light bounces is well, the total amount of light bounces a ray can take.</p>
<hr>
<h2 id="conclusion">Conclusion</h2>
<p>&ldquo;Wait, we&rsquo;re already done?&rdquo;</p>
<p>For now yes, I&rsquo;ll be splitting this into multiple parts. What I&rsquo;ve explained today should be enough for understanding how most of the settings in Cycles work. In later parts, I&rsquo;ll be focusing on certain settings, like adaptive sampling or shadow caustics (oooooo, fancy). But we&rsquo;ll leave it here for now.</p>
]]></content>
        </item>
        
        <item>
            <title>Moving On</title>
            <link>https://standingpadanimations.github.io/posts/moving-on/</link>
            <pubDate>Mon, 19 Dec 2022 19:59:51 -0600</pubDate>
            
            <guid>https://standingpadanimations.github.io/posts/moving-on/</guid>
            <description>Hi guys, I think yall might be confused why I&amp;rsquo;ve created a new website, let&amp;rsquo;s talk about it.
But first, what&amp;rsquo;s been going on recently?
Well in short, chaos. The actual situation is much longer, but to put it simply Twitter is no longer (in my opinion) a sustainable platform to remain on, so I moved to Mastodon.
Now because Mastodon allows you to verify your own sites, I&amp;rsquo;ve gone ahead and made this new one, since I felt like it.</description>
            <content type="html"><![CDATA[<p>Hi guys, I think yall might be confused why I&rsquo;ve created a new website, let&rsquo;s talk about it.</p>
<p>But first, what&rsquo;s been going on recently?</p>
<p>Well in short, chaos. The actual situation is much longer, but to put it simply Twitter is no longer (in my opinion) a sustainable platform to remain on, so I moved to Mastodon.</p>
<p>Now because Mastodon allows you to verify your own sites, I&rsquo;ve gone ahead and made this new one, since I felt like it.</p>
<p>Of course, some of you may have also noticed that I&rsquo;m not really doing much 3D. In short, I haven&rsquo;t had much time or motivation to continue working on 3D (but I&rsquo;m getting there, hopefully I&rsquo;ll think of something for New Years). I think I&rsquo;ll try this blogging thing for a bit (I did want to make some in depth guides to Cycles optimization and MCprep itself).</p>
<p>I&rsquo;m also learning how this Hugo thing (what I use to make this) works, so hopefully I&rsquo;ll be able to get my renders back up and running. It&rsquo;ll be a pain and a hassle, but I think it&rsquo;ll be worth it.</p>
]]></content>
        </item>
        
    </channel>
</rss>
